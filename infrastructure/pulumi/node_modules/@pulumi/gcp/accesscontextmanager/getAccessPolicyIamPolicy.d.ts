import * as pulumi from "@pulumi/pulumi";
/**
 * Retrieves the current IAM policy data for accesspolicy
 *
 * ## example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const policy = gcp.accesscontextmanager.getAccessPolicyIamPolicy({
 *     name: access_policy.name,
 * });
 * ```
 */
export declare function getAccessPolicyIamPolicy(args: GetAccessPolicyIamPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetAccessPolicyIamPolicyResult>;
/**
 * A collection of arguments for invoking getAccessPolicyIamPolicy.
 */
export interface GetAccessPolicyIamPolicyArgs {
    /**
     * Used to find the parent resource to bind the IAM policy to
     */
    name: string;
}
/**
 * A collection of values returned by getAccessPolicyIamPolicy.
 */
export interface GetAccessPolicyIamPolicyResult {
    /**
     * (Computed) The etag of the IAM policy.
     */
    readonly etag: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly name: string;
    /**
     * (Required only by `gcp.accesscontextmanager.AccessPolicyIamPolicy`) The policy data generated by
     * a `gcp.organizations.getIAMPolicy` data source.
     */
    readonly policyData: string;
}
/**
 * Retrieves the current IAM policy data for accesspolicy
 *
 * ## example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const policy = gcp.accesscontextmanager.getAccessPolicyIamPolicy({
 *     name: access_policy.name,
 * });
 * ```
 */
export declare function getAccessPolicyIamPolicyOutput(args: GetAccessPolicyIamPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetAccessPolicyIamPolicyResult>;
/**
 * A collection of arguments for invoking getAccessPolicyIamPolicy.
 */
export interface GetAccessPolicyIamPolicyOutputArgs {
    /**
     * Used to find the parent resource to bind the IAM policy to
     */
    name: pulumi.Input<string>;
}
