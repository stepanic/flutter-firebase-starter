"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getApplicationOutput = exports.getApplication = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Application is a functional grouping of Services and Workloads that helps achieve a desired end-to-end business functionality. Services and Workloads are owned by the Application.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const application = gcp.apphub.getApplication({
 *     project: "project-id",
 *     applicationId: "application",
 *     location: "location",
 * });
 * ```
 */
function getApplication(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:apphub/getApplication:getApplication", {
        "applicationId": args.applicationId,
        "location": args.location,
        "project": args.project,
    }, opts);
}
exports.getApplication = getApplication;
/**
 * Application is a functional grouping of Services and Workloads that helps achieve a desired end-to-end business functionality. Services and Workloads are owned by the Application.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const application = gcp.apphub.getApplication({
 *     project: "project-id",
 *     applicationId: "application",
 *     location: "location",
 * });
 * ```
 */
function getApplicationOutput(args, opts) {
    return pulumi.output(args).apply((a) => getApplication(a, opts));
}
exports.getApplicationOutput = getApplicationOutput;
//# sourceMappingURL=getApplication.js.map