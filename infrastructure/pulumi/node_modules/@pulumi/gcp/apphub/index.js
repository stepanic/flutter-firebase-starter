"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Workload = exports.ServiceProjectAttachment = exports.Service = exports.getDiscoveredWorkloadOutput = exports.getDiscoveredWorkload = exports.getDiscoveredServiceOutput = exports.getDiscoveredService = exports.getApplicationOutput = exports.getApplication = exports.Application = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.Application = null;
utilities.lazyLoad(exports, ["Application"], () => require("./application"));
exports.getApplication = null;
exports.getApplicationOutput = null;
utilities.lazyLoad(exports, ["getApplication", "getApplicationOutput"], () => require("./getApplication"));
exports.getDiscoveredService = null;
exports.getDiscoveredServiceOutput = null;
utilities.lazyLoad(exports, ["getDiscoveredService", "getDiscoveredServiceOutput"], () => require("./getDiscoveredService"));
exports.getDiscoveredWorkload = null;
exports.getDiscoveredWorkloadOutput = null;
utilities.lazyLoad(exports, ["getDiscoveredWorkload", "getDiscoveredWorkloadOutput"], () => require("./getDiscoveredWorkload"));
exports.Service = null;
utilities.lazyLoad(exports, ["Service"], () => require("./service"));
exports.ServiceProjectAttachment = null;
utilities.lazyLoad(exports, ["ServiceProjectAttachment"], () => require("./serviceProjectAttachment"));
exports.Workload = null;
utilities.lazyLoad(exports, ["Workload"], () => require("./workload"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "gcp:apphub/application:Application":
                return new exports.Application(name, undefined, { urn });
            case "gcp:apphub/service:Service":
                return new exports.Service(name, undefined, { urn });
            case "gcp:apphub/serviceProjectAttachment:ServiceProjectAttachment":
                return new exports.ServiceProjectAttachment(name, undefined, { urn });
            case "gcp:apphub/workload:Workload":
                return new exports.Workload(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "apphub/application", _module);
pulumi.runtime.registerResourceModule("gcp", "apphub/service", _module);
pulumi.runtime.registerResourceModule("gcp", "apphub/serviceProjectAttachment", _module);
pulumi.runtime.registerResourceModule("gcp", "apphub/workload", _module);
//# sourceMappingURL=index.js.map