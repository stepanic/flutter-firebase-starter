import * as pulumi from "@pulumi/pulumi";
/**
 * Represents a Service project attachment to the Host Project.
 *
 * ## Example Usage
 *
 * ### Service Project Attachment Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * import * as time from "@pulumi/time";
 *
 * const serviceProject = new gcp.organizations.Project("service_project", {
 *     projectId: "project-1",
 *     name: "Service Project",
 *     orgId: "123456789",
 * });
 * const wait120s = new time.index.Sleep("wait_120s", {createDuration: "120s"}, {
 *     dependsOn: [serviceProject],
 * });
 * const example = new gcp.apphub.ServiceProjectAttachment("example", {serviceProjectAttachmentId: serviceProject.projectId}, {
 *     dependsOn: [wait120s],
 * });
 * ```
 * ### Service Project Attachment Full
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 * import * as time from "@pulumi/time";
 *
 * const serviceProjectFull = new gcp.organizations.Project("service_project_full", {
 *     projectId: "project-1",
 *     name: "Service Project Full",
 *     orgId: "123456789",
 * });
 * const wait120s = new time.index.Sleep("wait_120s", {createDuration: "120s"}, {
 *     dependsOn: [serviceProjectFull],
 * });
 * const example2 = new gcp.apphub.ServiceProjectAttachment("example2", {
 *     serviceProjectAttachmentId: serviceProjectFull.projectId,
 *     serviceProject: serviceProjectFull.projectId,
 * }, {
 *     dependsOn: [wait120s],
 * });
 * ```
 *
 * ## Import
 *
 * ServiceProjectAttachment can be imported using any of these accepted formats:
 *
 * * `projects/{{project}}/locations/global/serviceProjectAttachments/{{service_project_attachment_id}}`
 *
 * * `{{project}}/{{service_project_attachment_id}}`
 *
 * * `{{service_project_attachment_id}}`
 *
 * When using the `pulumi import` command, ServiceProjectAttachment can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:apphub/serviceProjectAttachment:ServiceProjectAttachment default projects/{{project}}/locations/global/serviceProjectAttachments/{{service_project_attachment_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:apphub/serviceProjectAttachment:ServiceProjectAttachment default {{project}}/{{service_project_attachment_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:apphub/serviceProjectAttachment:ServiceProjectAttachment default {{service_project_attachment_id}}
 * ```
 */
export declare class ServiceProjectAttachment extends pulumi.CustomResource {
    /**
     * Get an existing ServiceProjectAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServiceProjectAttachmentState, opts?: pulumi.CustomResourceOptions): ServiceProjectAttachment;
    /**
     * Returns true if the given object is an instance of ServiceProjectAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ServiceProjectAttachment;
    /**
     * Output only. Create time.
     */
    readonly createTime: pulumi.Output<string>;
    /**
     * "Identifier. The resource name of a ServiceProjectAttachment. Format:\"projects/{host-project-id}/locations/global/serviceProjectAttachments/{service-project-id}.\""
     */
    readonly name: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project: pulumi.Output<string>;
    /**
     * "Immutable. Service project name in the format: \"projects/abc\"
     * or \"projects/123\". As input, project name with either project id or number
     * are accepted. As output, this field will contain project number."
     */
    readonly serviceProject: pulumi.Output<string | undefined>;
    /**
     * Required. The service project attachment identifier must contain the projectId of the service project specified in the service_project_attachment.service_project field. Hint: "projects/{project_id}"
     *
     *
     * - - -
     */
    readonly serviceProjectAttachmentId: pulumi.Output<string>;
    /**
     * ServiceProjectAttachment state.
     */
    readonly state: pulumi.Output<string>;
    /**
     * Output only. A globally unique identifier (in UUID4 format) for the `ServiceProjectAttachment`.
     */
    readonly uid: pulumi.Output<string>;
    /**
     * Create a ServiceProjectAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceProjectAttachmentArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ServiceProjectAttachment resources.
 */
export interface ServiceProjectAttachmentState {
    /**
     * Output only. Create time.
     */
    createTime?: pulumi.Input<string>;
    /**
     * "Identifier. The resource name of a ServiceProjectAttachment. Format:\"projects/{host-project-id}/locations/global/serviceProjectAttachments/{service-project-id}.\""
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * "Immutable. Service project name in the format: \"projects/abc\"
     * or \"projects/123\". As input, project name with either project id or number
     * are accepted. As output, this field will contain project number."
     */
    serviceProject?: pulumi.Input<string>;
    /**
     * Required. The service project attachment identifier must contain the projectId of the service project specified in the service_project_attachment.service_project field. Hint: "projects/{project_id}"
     *
     *
     * - - -
     */
    serviceProjectAttachmentId?: pulumi.Input<string>;
    /**
     * ServiceProjectAttachment state.
     */
    state?: pulumi.Input<string>;
    /**
     * Output only. A globally unique identifier (in UUID4 format) for the `ServiceProjectAttachment`.
     */
    uid?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ServiceProjectAttachment resource.
 */
export interface ServiceProjectAttachmentArgs {
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * "Immutable. Service project name in the format: \"projects/abc\"
     * or \"projects/123\". As input, project name with either project id or number
     * are accepted. As output, this field will contain project number."
     */
    serviceProject?: pulumi.Input<string>;
    /**
     * Required. The service project attachment identifier must contain the projectId of the service project specified in the service_project_attachment.service_project field. Hint: "projects/{project_id}"
     *
     *
     * - - -
     */
    serviceProjectAttachmentId: pulumi.Input<string>;
}
