import * as pulumi from "@pulumi/pulumi";
/**
 * ## Example Usage
 *
 * ### Artifact Registry Vpcsc Config
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const my_config = new gcp.artifactregistry.VpcscConfig("my-config", {
 *     location: "us-central1",
 *     vpcscPolicy: "ALLOW",
 * });
 * ```
 *
 * ## Import
 *
 * VPCSCConfig can be imported using any of these accepted formats:
 *
 * * `projects/{{project}}/locations/{{location}}/vpcscConfig/{{name}}`
 *
 * * `{{project}}/{{location}}/{{name}}`
 *
 * * `{{location}}/{{name}}`
 *
 * When using the `pulumi import` command, VPCSCConfig can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:artifactregistry/vpcscConfig:VpcscConfig default projects/{{project}}/locations/{{location}}/vpcscConfig/{{name}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:artifactregistry/vpcscConfig:VpcscConfig default {{project}}/{{location}}/{{name}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:artifactregistry/vpcscConfig:VpcscConfig default {{location}}/{{name}}
 * ```
 */
export declare class VpcscConfig extends pulumi.CustomResource {
    /**
     * Get an existing VpcscConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: VpcscConfigState, opts?: pulumi.CustomResourceOptions): VpcscConfig;
    /**
     * Returns true if the given object is an instance of VpcscConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is VpcscConfig;
    /**
     * The name of the location this config is located in.
     */
    readonly location: pulumi.Output<string>;
    /**
     * The name of the project's VPC SC Config.
     * Always of the form: projects/{project}/location/{location}/vpcscConfig
     */
    readonly name: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project: pulumi.Output<string>;
    /**
     * The VPC SC policy for project and location.
     * Possible values are: `DENY`, `ALLOW`.
     */
    readonly vpcscPolicy: pulumi.Output<string | undefined>;
    /**
     * Create a VpcscConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: VpcscConfigArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering VpcscConfig resources.
 */
export interface VpcscConfigState {
    /**
     * The name of the location this config is located in.
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the project's VPC SC Config.
     * Always of the form: projects/{project}/location/{location}/vpcscConfig
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * The VPC SC policy for project and location.
     * Possible values are: `DENY`, `ALLOW`.
     */
    vpcscPolicy?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a VpcscConfig resource.
 */
export interface VpcscConfigArgs {
    /**
     * The name of the location this config is located in.
     */
    location?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * The VPC SC policy for project and location.
     * Possible values are: `DENY`, `ALLOW`.
     */
    vpcscPolicy?: pulumi.Input<string>;
}
