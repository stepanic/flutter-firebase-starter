import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * ## Example Usage
 *
 * ### Backup Dr Management Server
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const _default = new gcp.compute.Network("default", {name: "vpc-network"});
 * const privateIpAddress = new gcp.compute.GlobalAddress("private_ip_address", {
 *     name: "vpc-network",
 *     addressType: "INTERNAL",
 *     purpose: "VPC_PEERING",
 *     prefixLength: 20,
 *     network: _default.id,
 * });
 * const defaultConnection = new gcp.servicenetworking.Connection("default", {
 *     network: _default.id,
 *     service: "servicenetworking.googleapis.com",
 *     reservedPeeringRanges: [privateIpAddress.name],
 * });
 * const ms_console = new gcp.backupdisasterrecovery.ManagementServer("ms-console", {
 *     location: "us-central1",
 *     name: "ms-console",
 *     type: "BACKUP_RESTORE",
 *     networks: [{
 *         network: _default.id,
 *         peeringMode: "PRIVATE_SERVICE_ACCESS",
 *     }],
 * }, {
 *     dependsOn: [defaultConnection],
 * });
 * ```
 *
 * ## Import
 *
 * ManagementServer can be imported using any of these accepted formats:
 *
 * * `projects/{{project}}/locations/{{location}}/managementServers/{{name}}`
 *
 * * `{{project}}/{{location}}/{{name}}`
 *
 * * `{{location}}/{{name}}`
 *
 * When using the `pulumi import` command, ManagementServer can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:backupdisasterrecovery/managementServer:ManagementServer default projects/{{project}}/locations/{{location}}/managementServers/{{name}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:backupdisasterrecovery/managementServer:ManagementServer default {{project}}/{{location}}/{{name}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:backupdisasterrecovery/managementServer:ManagementServer default {{location}}/{{name}}
 * ```
 */
export declare class ManagementServer extends pulumi.CustomResource {
    /**
     * Get an existing ManagementServer resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ManagementServerState, opts?: pulumi.CustomResourceOptions): ManagementServer;
    /**
     * Returns true if the given object is an instance of ManagementServer.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ManagementServer;
    /**
     * The location for the management server (management console)
     */
    readonly location: pulumi.Output<string>;
    /**
     * The management console URI
     * Structure is documented below.
     */
    readonly managementUris: pulumi.Output<outputs.backupdisasterrecovery.ManagementServerManagementUri[]>;
    /**
     * The name of management server (management console)
     */
    readonly name: pulumi.Output<string>;
    /**
     * Network details to create management server (management console).
     * Structure is documented below.
     */
    readonly networks: pulumi.Output<outputs.backupdisasterrecovery.ManagementServerNetwork[]>;
    /**
     * The oauth2ClientId of management console.
     */
    readonly oauth2ClientId: pulumi.Output<string>;
    readonly project: pulumi.Output<string>;
    /**
     * The type of management server (management console). Default value: "BACKUP_RESTORE" Possible values: ["BACKUP_RESTORE"]
     */
    readonly type: pulumi.Output<string | undefined>;
    /**
     * Create a ManagementServer resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ManagementServerArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ManagementServer resources.
 */
export interface ManagementServerState {
    /**
     * The location for the management server (management console)
     */
    location?: pulumi.Input<string>;
    /**
     * The management console URI
     * Structure is documented below.
     */
    managementUris?: pulumi.Input<pulumi.Input<inputs.backupdisasterrecovery.ManagementServerManagementUri>[]>;
    /**
     * The name of management server (management console)
     */
    name?: pulumi.Input<string>;
    /**
     * Network details to create management server (management console).
     * Structure is documented below.
     */
    networks?: pulumi.Input<pulumi.Input<inputs.backupdisasterrecovery.ManagementServerNetwork>[]>;
    /**
     * The oauth2ClientId of management console.
     */
    oauth2ClientId?: pulumi.Input<string>;
    project?: pulumi.Input<string>;
    /**
     * The type of management server (management console). Default value: "BACKUP_RESTORE" Possible values: ["BACKUP_RESTORE"]
     */
    type?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ManagementServer resource.
 */
export interface ManagementServerArgs {
    /**
     * The location for the management server (management console)
     */
    location: pulumi.Input<string>;
    /**
     * The name of management server (management console)
     */
    name?: pulumi.Input<string>;
    /**
     * Network details to create management server (management console).
     * Structure is documented below.
     */
    networks: pulumi.Input<pulumi.Input<inputs.backupdisasterrecovery.ManagementServerNetwork>[]>;
    project?: pulumi.Input<string>;
    /**
     * The type of management server (management console). Default value: "BACKUP_RESTORE" Possible values: ["BACKUP_RESTORE"]
     */
    type?: pulumi.Input<string>;
}
