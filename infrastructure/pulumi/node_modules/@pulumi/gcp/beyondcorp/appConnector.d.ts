import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * A BeyondCorp AppConnector resource represents an application facing component deployed proximal to
 * and with direct access to the application instances. It is used to establish connectivity between the
 * remote enterprise environment and GCP. It initiates connections to the applications and can proxy the
 * data from users over the connection.
 *
 * To get more information about AppConnector, see:
 *
 * * [API documentation](https://cloud.google.com/beyondcorp/docs/reference/rest#rest-resource:-v1.projects.locations.appconnectors)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/beyondcorp-enterprise/docs/enable-app-connector)
 *
 * ## Example Usage
 *
 * ### Beyondcorp App Connector Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const serviceAccount = new gcp.serviceaccount.Account("service_account", {
 *     accountId: "my-account",
 *     displayName: "Test Service Account",
 * });
 * const appConnector = new gcp.beyondcorp.AppConnector("app_connector", {
 *     name: "my-app-connector",
 *     principalInfo: {
 *         serviceAccount: {
 *             email: serviceAccount.email,
 *         },
 *     },
 * });
 * ```
 * ### Beyondcorp App Connector Full
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const serviceAccount = new gcp.serviceaccount.Account("service_account", {
 *     accountId: "my-account",
 *     displayName: "Test Service Account",
 * });
 * const appConnector = new gcp.beyondcorp.AppConnector("app_connector", {
 *     name: "my-app-connector",
 *     region: "us-central1",
 *     displayName: "some display name",
 *     principalInfo: {
 *         serviceAccount: {
 *             email: serviceAccount.email,
 *         },
 *     },
 *     labels: {
 *         foo: "bar",
 *         bar: "baz",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * AppConnector can be imported using any of these accepted formats:
 *
 * * `projects/{{project}}/locations/{{region}}/appConnectors/{{name}}`
 *
 * * `{{project}}/{{region}}/{{name}}`
 *
 * * `{{region}}/{{name}}`
 *
 * * `{{name}}`
 *
 * When using the `pulumi import` command, AppConnector can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:beyondcorp/appConnector:AppConnector default projects/{{project}}/locations/{{region}}/appConnectors/{{name}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:beyondcorp/appConnector:AppConnector default {{project}}/{{region}}/{{name}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:beyondcorp/appConnector:AppConnector default {{region}}/{{name}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:beyondcorp/appConnector:AppConnector default {{name}}
 * ```
 */
export declare class AppConnector extends pulumi.CustomResource {
    /**
     * Get an existing AppConnector resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppConnectorState, opts?: pulumi.CustomResourceOptions): AppConnector;
    /**
     * Returns true if the given object is an instance of AppConnector.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is AppConnector;
    /**
     * An arbitrary user-provided name for the AppConnector.
     */
    readonly displayName: pulumi.Output<string | undefined>;
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     */
    readonly effectiveLabels: pulumi.Output<{
        [key: string]: string;
    }>;
    /**
     * Resource labels to represent user provided metadata. **Note**: This field is non-authoritative, and will only manage the
     * labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
     * resource.
     */
    readonly labels: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * ID of the AppConnector.
     */
    readonly name: pulumi.Output<string>;
    /**
     * Principal information about the Identity of the AppConnector.
     * Structure is documented below.
     */
    readonly principalInfo: pulumi.Output<outputs.beyondcorp.AppConnectorPrincipalInfo>;
    readonly project: pulumi.Output<string>;
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     */
    readonly pulumiLabels: pulumi.Output<{
        [key: string]: string;
    }>;
    /**
     * The region of the AppConnector.
     */
    readonly region: pulumi.Output<string | undefined>;
    /**
     * Represents the different states of a AppConnector.
     */
    readonly state: pulumi.Output<string>;
    /**
     * Create a AppConnector resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AppConnectorArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering AppConnector resources.
 */
export interface AppConnectorState {
    /**
     * An arbitrary user-provided name for the AppConnector.
     */
    displayName?: pulumi.Input<string>;
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     */
    effectiveLabels?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Resource labels to represent user provided metadata. **Note**: This field is non-authoritative, and will only manage the
     * labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
     * resource.
     */
    labels?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * ID of the AppConnector.
     */
    name?: pulumi.Input<string>;
    /**
     * Principal information about the Identity of the AppConnector.
     * Structure is documented below.
     */
    principalInfo?: pulumi.Input<inputs.beyondcorp.AppConnectorPrincipalInfo>;
    project?: pulumi.Input<string>;
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     */
    pulumiLabels?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The region of the AppConnector.
     */
    region?: pulumi.Input<string>;
    /**
     * Represents the different states of a AppConnector.
     */
    state?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a AppConnector resource.
 */
export interface AppConnectorArgs {
    /**
     * An arbitrary user-provided name for the AppConnector.
     */
    displayName?: pulumi.Input<string>;
    /**
     * Resource labels to represent user provided metadata. **Note**: This field is non-authoritative, and will only manage the
     * labels present in your configuration. Please refer to the field 'effective_labels' for all of the labels present on the
     * resource.
     */
    labels?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * ID of the AppConnector.
     */
    name?: pulumi.Input<string>;
    /**
     * Principal information about the Identity of the AppConnector.
     * Structure is documented below.
     */
    principalInfo: pulumi.Input<inputs.beyondcorp.AppConnectorPrincipalInfo>;
    project?: pulumi.Input<string>;
    /**
     * The region of the AppConnector.
     */
    region?: pulumi.Input<string>;
}
