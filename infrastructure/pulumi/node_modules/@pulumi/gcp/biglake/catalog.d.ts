import * as pulumi from "@pulumi/pulumi";
/**
 * Catalogs are top-level containers for Databases and Tables.
 *
 * To get more information about Catalog, see:
 *
 * * [API documentation](https://cloud.google.com/bigquery/docs/reference/biglake/rest/v1/projects.locations.catalogs)
 * * How-to Guides
 *     * [Manage open source metadata with BigLake Metastore](https://cloud.google.com/bigquery/docs/manage-open-source-metadata#create_catalogs)
 *
 * ## Example Usage
 *
 * ### Bigquery Biglake Catalog
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const _default = new gcp.biglake.Catalog("default", {
 *     name: "my_catalog",
 *     location: "US",
 * });
 * ```
 *
 * ## Import
 *
 * Catalog can be imported using any of these accepted formats:
 *
 * * `projects/{{project}}/locations/{{location}}/catalogs/{{name}}`
 *
 * * `{{project}}/{{location}}/{{name}}`
 *
 * * `{{location}}/{{name}}`
 *
 * When using the `pulumi import` command, Catalog can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:biglake/catalog:Catalog default projects/{{project}}/locations/{{location}}/catalogs/{{name}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:biglake/catalog:Catalog default {{project}}/{{location}}/{{name}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:biglake/catalog:Catalog default {{location}}/{{name}}
 * ```
 */
export declare class Catalog extends pulumi.CustomResource {
    /**
     * Get an existing Catalog resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CatalogState, opts?: pulumi.CustomResourceOptions): Catalog;
    /**
     * Returns true if the given object is an instance of Catalog.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is Catalog;
    /**
     * Output only. The creation time of the catalog. A timestamp in RFC3339 UTC
     * "Zulu" format, with nanosecond resolution and up to nine fractional
     * digits.
     */
    readonly createTime: pulumi.Output<string>;
    /**
     * Output only. The deletion time of the catalog. Only set after the catalog
     * is deleted. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
     * resolution and up to nine fractional digits.
     */
    readonly deleteTime: pulumi.Output<string>;
    /**
     * Output only. The time when this catalog is considered expired. Only set
     * after the catalog is deleted. Only set after the catalog is deleted.
     * A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and
     * up to nine fractional digits.
     */
    readonly expireTime: pulumi.Output<string>;
    /**
     * The geographic location where the Catalog should reside.
     */
    readonly location: pulumi.Output<string>;
    /**
     * The name of the Catalog. Format:
     * projects/{project_id_or_number}/locations/{locationId}/catalogs/{catalogId}
     *
     *
     * - - -
     */
    readonly name: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project: pulumi.Output<string>;
    /**
     * Output only. The last modification time of the catalog. A timestamp in
     * RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
     * fractional digits.
     */
    readonly updateTime: pulumi.Output<string>;
    /**
     * Create a Catalog resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CatalogArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering Catalog resources.
 */
export interface CatalogState {
    /**
     * Output only. The creation time of the catalog. A timestamp in RFC3339 UTC
     * "Zulu" format, with nanosecond resolution and up to nine fractional
     * digits.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Output only. The deletion time of the catalog. Only set after the catalog
     * is deleted. A timestamp in RFC3339 UTC "Zulu" format, with nanosecond
     * resolution and up to nine fractional digits.
     */
    deleteTime?: pulumi.Input<string>;
    /**
     * Output only. The time when this catalog is considered expired. Only set
     * after the catalog is deleted. Only set after the catalog is deleted.
     * A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and
     * up to nine fractional digits.
     */
    expireTime?: pulumi.Input<string>;
    /**
     * The geographic location where the Catalog should reside.
     */
    location?: pulumi.Input<string>;
    /**
     * The name of the Catalog. Format:
     * projects/{project_id_or_number}/locations/{locationId}/catalogs/{catalogId}
     *
     *
     * - - -
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * Output only. The last modification time of the catalog. A timestamp in
     * RFC3339 UTC "Zulu" format, with nanosecond resolution and up to nine
     * fractional digits.
     */
    updateTime?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a Catalog resource.
 */
export interface CatalogArgs {
    /**
     * The geographic location where the Catalog should reside.
     */
    location: pulumi.Input<string>;
    /**
     * The name of the Catalog. Format:
     * projects/{project_id_or_number}/locations/{locationId}/catalogs/{catalogId}
     *
     *
     * - - -
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
}
