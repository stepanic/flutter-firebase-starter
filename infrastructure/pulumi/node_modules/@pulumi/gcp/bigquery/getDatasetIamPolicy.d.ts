import * as pulumi from "@pulumi/pulumi";
/**
 * Retrieves the current IAM policy data for a BigQuery dataset.
 *
 * ## example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const policy = gcp.bigquery.getDatasetIamPolicy({
 *     datasetId: dataset.datasetId,
 * });
 * ```
 */
export declare function getDatasetIamPolicy(args: GetDatasetIamPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetDatasetIamPolicyResult>;
/**
 * A collection of arguments for invoking getDatasetIamPolicy.
 */
export interface GetDatasetIamPolicyArgs {
    /**
     * The dataset ID.
     */
    datasetId: string;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: string;
}
/**
 * A collection of values returned by getDatasetIamPolicy.
 */
export interface GetDatasetIamPolicyResult {
    readonly datasetId: string;
    /**
     * (Computed) The etag of the IAM policy.
     */
    readonly etag: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * (Computed) The policy data
     */
    readonly policyData: string;
    readonly project: string;
}
/**
 * Retrieves the current IAM policy data for a BigQuery dataset.
 *
 * ## example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const policy = gcp.bigquery.getDatasetIamPolicy({
 *     datasetId: dataset.datasetId,
 * });
 * ```
 */
export declare function getDatasetIamPolicyOutput(args: GetDatasetIamPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDatasetIamPolicyResult>;
/**
 * A collection of arguments for invoking getDatasetIamPolicy.
 */
export interface GetDatasetIamPolicyOutputArgs {
    /**
     * The dataset ID.
     */
    datasetId: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
}
