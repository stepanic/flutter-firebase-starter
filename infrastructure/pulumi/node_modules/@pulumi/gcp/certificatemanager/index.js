"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.TrustConfig = exports.getCertificateMapOutput = exports.getCertificateMap = exports.DnsAuthorization = exports.CertificateMapEntry = exports.CertificateMap = exports.CertificateIssuanceConfig = exports.Certificate = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.Certificate = null;
utilities.lazyLoad(exports, ["Certificate"], () => require("./certificate"));
exports.CertificateIssuanceConfig = null;
utilities.lazyLoad(exports, ["CertificateIssuanceConfig"], () => require("./certificateIssuanceConfig"));
exports.CertificateMap = null;
utilities.lazyLoad(exports, ["CertificateMap"], () => require("./certificateMap"));
exports.CertificateMapEntry = null;
utilities.lazyLoad(exports, ["CertificateMapEntry"], () => require("./certificateMapEntry"));
exports.DnsAuthorization = null;
utilities.lazyLoad(exports, ["DnsAuthorization"], () => require("./dnsAuthorization"));
exports.getCertificateMap = null;
exports.getCertificateMapOutput = null;
utilities.lazyLoad(exports, ["getCertificateMap", "getCertificateMapOutput"], () => require("./getCertificateMap"));
exports.TrustConfig = null;
utilities.lazyLoad(exports, ["TrustConfig"], () => require("./trustConfig"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "gcp:certificatemanager/certificate:Certificate":
                return new exports.Certificate(name, undefined, { urn });
            case "gcp:certificatemanager/certificateIssuanceConfig:CertificateIssuanceConfig":
                return new exports.CertificateIssuanceConfig(name, undefined, { urn });
            case "gcp:certificatemanager/certificateMap:CertificateMap":
                return new exports.CertificateMap(name, undefined, { urn });
            case "gcp:certificatemanager/certificateMapEntry:CertificateMapEntry":
                return new exports.CertificateMapEntry(name, undefined, { urn });
            case "gcp:certificatemanager/dnsAuthorization:DnsAuthorization":
                return new exports.DnsAuthorization(name, undefined, { urn });
            case "gcp:certificatemanager/trustConfig:TrustConfig":
                return new exports.TrustConfig(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "certificatemanager/certificate", _module);
pulumi.runtime.registerResourceModule("gcp", "certificatemanager/certificateIssuanceConfig", _module);
pulumi.runtime.registerResourceModule("gcp", "certificatemanager/certificateMap", _module);
pulumi.runtime.registerResourceModule("gcp", "certificatemanager/certificateMapEntry", _module);
pulumi.runtime.registerResourceModule("gcp", "certificatemanager/dnsAuthorization", _module);
pulumi.runtime.registerResourceModule("gcp", "certificatemanager/trustConfig", _module);
//# sourceMappingURL=index.js.map