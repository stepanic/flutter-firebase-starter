"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.CaExternalAccountKey = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * A representation of an ExternalAccountKey used for external account binding within ACME.
 *
 * To get more information about ExternalAccountKey, see:
 *
 * * [API documentation](https://cloud.google.com/certificate-manager/docs/reference/public-ca/rest/v1/projects.locations.externalAccountKeys/create)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/certificate-manager/docs/public-ca)
 *     * [Request Certificate Using Public CA](https://cloud.google.com/certificate-manager/docs/public-ca-tutorial)
 *     * [Request EAB key ID and HMAC](https://cloud.google.com/certificate-manager/docs/public-ca-tutorial#request-key-hmac)
 *
 * > **Warning:** This resource is create-only and could not be read from the API.
 * On delete, the resource would be removed from the state.
 * You must use an EAB secret within 7 days of obtaining it.
 * The EAB secret is invalidated if you don't use it within 7 days.
 * The ACME account registered by using an EAB secret has no expiration.
 *
 * ## Example Usage
 *
 * ### Public Ca External Account Key
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const prod = new gcp.compute.CaExternalAccountKey("prod", {project: "my-project-name"});
 * ```
 *
 * ## Import
 *
 * This resource does not support import.
 */
class CaExternalAccountKey extends pulumi.CustomResource {
    /**
     * Get an existing CaExternalAccountKey resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new CaExternalAccountKey(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of CaExternalAccountKey.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CaExternalAccountKey.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["b64MacKey"] = state ? state.b64MacKey : undefined;
            resourceInputs["keyId"] = state ? state.keyId : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
        }
        else {
            const args = argsOrState;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["b64MacKey"] = undefined /*out*/;
            resourceInputs["keyId"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["b64MacKey", "keyId"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(CaExternalAccountKey.__pulumiType, name, resourceInputs, opts);
    }
}
exports.CaExternalAccountKey = CaExternalAccountKey;
/** @internal */
CaExternalAccountKey.__pulumiType = 'gcp:compute/caExternalAccountKey:CaExternalAccountKey';
//# sourceMappingURL=caExternalAccountKey.js.map