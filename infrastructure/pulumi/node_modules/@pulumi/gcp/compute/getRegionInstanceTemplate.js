"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getRegionInstanceTemplateOutput = exports.getRegionInstanceTemplate = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Get information about a VM instance template resource within GCE. For more information see
 * [the official documentation](https://cloud.google.com/compute/docs/instance-templates)
 * and
 * [API](https://cloud.google.com/compute/docs/reference/rest/v1/regionInstanceTemplates).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * // by name
 * const generic = gcp.compute.getRegionInstanceTemplate({
 *     name: "generic-tpl-20200107",
 * });
 * // using a filter
 * const generic-regex = gcp.compute.getRegionInstanceTemplate({
 *     filter: "name != generic-tpl-20200107",
 *     mostRecent: true,
 * });
 * ```
 */
function getRegionInstanceTemplate(args, opts) {
    args = args || {};
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:compute/getRegionInstanceTemplate:getRegionInstanceTemplate", {
        "filter": args.filter,
        "mostRecent": args.mostRecent,
        "name": args.name,
        "project": args.project,
        "region": args.region,
    }, opts);
}
exports.getRegionInstanceTemplate = getRegionInstanceTemplate;
/**
 * Get information about a VM instance template resource within GCE. For more information see
 * [the official documentation](https://cloud.google.com/compute/docs/instance-templates)
 * and
 * [API](https://cloud.google.com/compute/docs/reference/rest/v1/regionInstanceTemplates).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * // by name
 * const generic = gcp.compute.getRegionInstanceTemplate({
 *     name: "generic-tpl-20200107",
 * });
 * // using a filter
 * const generic-regex = gcp.compute.getRegionInstanceTemplate({
 *     filter: "name != generic-tpl-20200107",
 *     mostRecent: true,
 * });
 * ```
 */
function getRegionInstanceTemplateOutput(args, opts) {
    return pulumi.output(args).apply((a) => getRegionInstanceTemplate(a, opts));
}
exports.getRegionInstanceTemplateOutput = getRegionInstanceTemplateOutput;
//# sourceMappingURL=getRegionInstanceTemplate.js.map