"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ProjectCloudArmorTier = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Sets the Cloud Armor tier of the project.
 *
 * To get more information about ProjectCloudArmorTier, see:
 *
 * * [API documentation](https://cloud.google.com/compute/docs/reference/rest/v1/projects/setCloudArmorTier)
 * * How-to Guides
 *     * [Subscribing to Cloud Armor Enterprise](https://cloud.google.com/armor/docs/managed-protection-overview#subscribing_to_plus)
 *
 * ## Example Usage
 *
 * ### Compute Project Cloud Armor Tier Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const cloudArmorTierConfig = new gcp.compute.ProjectCloudArmorTier("cloud_armor_tier_config", {cloudArmorTier: "CA_STANDARD"});
 * ```
 * ### Compute Project Cloud Armor Tier Project Set
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const project = new gcp.organizations.Project("project", {
 *     projectId: "your_project_id",
 *     name: "your_project_id",
 *     orgId: "123456789",
 *     billingAccount: "000000-0000000-0000000-000000",
 * });
 * const compute = new gcp.projects.Service("compute", {
 *     project: project.projectId,
 *     service: "compute.googleapis.com",
 * });
 * const cloudArmorTierConfig = new gcp.compute.ProjectCloudArmorTier("cloud_armor_tier_config", {
 *     project: project.projectId,
 *     cloudArmorTier: "CA_STANDARD",
 * }, {
 *     dependsOn: [compute],
 * });
 * ```
 *
 * ## Import
 *
 * ProjectCloudArmorTier can be imported using any of these accepted formats:
 *
 * * `projects/{{project}}`
 *
 * * `{{project}}`
 *
 * When using the `pulumi import` command, ProjectCloudArmorTier can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:compute/projectCloudArmorTier:ProjectCloudArmorTier default projects/{{project}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:compute/projectCloudArmorTier:ProjectCloudArmorTier default {{project}}
 * ```
 */
class ProjectCloudArmorTier extends pulumi.CustomResource {
    /**
     * Get an existing ProjectCloudArmorTier resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ProjectCloudArmorTier(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ProjectCloudArmorTier.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ProjectCloudArmorTier.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["cloudArmorTier"] = state ? state.cloudArmorTier : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.cloudArmorTier === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cloudArmorTier'");
            }
            resourceInputs["cloudArmorTier"] = args ? args.cloudArmorTier : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ProjectCloudArmorTier.__pulumiType, name, resourceInputs, opts);
    }
}
exports.ProjectCloudArmorTier = ProjectCloudArmorTier;
/** @internal */
ProjectCloudArmorTier.__pulumiType = 'gcp:compute/projectCloudArmorTier:ProjectCloudArmorTier';
//# sourceMappingURL=projectCloudArmorTier.js.map