import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
export declare class RepositoryIamBinding extends pulumi.CustomResource {
    /**
     * Get an existing RepositoryIamBinding resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RepositoryIamBindingState, opts?: pulumi.CustomResourceOptions): RepositoryIamBinding;
    /**
     * Returns true if the given object is an instance of RepositoryIamBinding.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is RepositoryIamBinding;
    readonly condition: pulumi.Output<outputs.dataform.RepositoryIamBindingCondition | undefined>;
    readonly etag: pulumi.Output<string>;
    readonly members: pulumi.Output<string[]>;
    readonly project: pulumi.Output<string>;
    readonly region: pulumi.Output<string>;
    readonly repository: pulumi.Output<string>;
    readonly role: pulumi.Output<string>;
    /**
     * Create a RepositoryIamBinding resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RepositoryIamBindingArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering RepositoryIamBinding resources.
 */
export interface RepositoryIamBindingState {
    condition?: pulumi.Input<inputs.dataform.RepositoryIamBindingCondition>;
    etag?: pulumi.Input<string>;
    members?: pulumi.Input<pulumi.Input<string>[]>;
    project?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    repository?: pulumi.Input<string>;
    role?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a RepositoryIamBinding resource.
 */
export interface RepositoryIamBindingArgs {
    condition?: pulumi.Input<inputs.dataform.RepositoryIamBindingCondition>;
    members: pulumi.Input<pulumi.Input<string>[]>;
    project?: pulumi.Input<string>;
    region?: pulumi.Input<string>;
    repository: pulumi.Input<string>;
    role: pulumi.Input<string>;
}
