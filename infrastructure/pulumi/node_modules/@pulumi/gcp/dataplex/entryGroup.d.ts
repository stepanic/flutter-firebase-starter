import * as pulumi from "@pulumi/pulumi";
/**
 * An Entry Group represents a logical grouping of one or more Entries.
 *
 * ## Example Usage
 *
 * ### Dataplex Entry Group Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const testEntryGroupBasic = new gcp.dataplex.EntryGroup("test_entry_group_basic", {
 *     entryGroupId: "entry-group-basic",
 *     project: "my-project-name",
 *     location: "us-central1",
 * });
 * ```
 * ### Dataplex Entry Group Full
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const testEntryGroupFull = new gcp.dataplex.EntryGroup("test_entry_group_full", {
 *     entryGroupId: "entry-group-full",
 *     project: "my-project-name",
 *     location: "us-central1",
 *     labels: {
 *         tag: "test-tf",
 *     },
 *     displayName: "terraform entry group",
 *     description: "entry group created by Terraform",
 * });
 * ```
 *
 * ## Import
 *
 * EntryGroup can be imported using any of these accepted formats:
 *
 * * `projects/{{project}}/locations/{{location}}/entryGroups/{{entry_group_id}}`
 *
 * * `{{project}}/{{location}}/{{entry_group_id}}`
 *
 * * `{{location}}/{{entry_group_id}}`
 *
 * When using the `pulumi import` command, EntryGroup can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:dataplex/entryGroup:EntryGroup default projects/{{project}}/locations/{{location}}/entryGroups/{{entry_group_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:dataplex/entryGroup:EntryGroup default {{project}}/{{location}}/{{entry_group_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:dataplex/entryGroup:EntryGroup default {{location}}/{{entry_group_id}}
 * ```
 */
export declare class EntryGroup extends pulumi.CustomResource {
    /**
     * Get an existing EntryGroup resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EntryGroupState, opts?: pulumi.CustomResourceOptions): EntryGroup;
    /**
     * Returns true if the given object is an instance of EntryGroup.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is EntryGroup;
    /**
     * The time when the EntryGroup was created.
     */
    readonly createTime: pulumi.Output<string>;
    /**
     * Description of the EntryGroup.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * User friendly display name.
     */
    readonly displayName: pulumi.Output<string | undefined>;
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     */
    readonly effectiveLabels: pulumi.Output<{
        [key: string]: string;
    }>;
    /**
     * The entry group id of the entry group.
     */
    readonly entryGroupId: pulumi.Output<string | undefined>;
    /**
     * User-defined labels for the EntryGroup.
     *
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     */
    readonly labels: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The location where entry group will be created in.
     */
    readonly location: pulumi.Output<string | undefined>;
    /**
     * The relative resource name of the EntryGroup, of the form: projects/{project_number}/locations/{location_id}/entryGroups/{entry_group_id}
     */
    readonly name: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project: pulumi.Output<string>;
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     */
    readonly pulumiLabels: pulumi.Output<{
        [key: string]: string;
    }>;
    /**
     * Denotes the transfer status of the Entry Group. It is unspecified
     * for Entry Group created from Dataplex API.
     */
    readonly transferStatus: pulumi.Output<string>;
    /**
     * System generated globally unique ID for the EntryGroup. This ID will be different if the EntryGroup is deleted and re-created with the same name.
     */
    readonly uid: pulumi.Output<string>;
    /**
     * The time when the EntryGroup was last updated.
     */
    readonly updateTime: pulumi.Output<string>;
    /**
     * Create a EntryGroup resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: EntryGroupArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering EntryGroup resources.
 */
export interface EntryGroupState {
    /**
     * The time when the EntryGroup was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Description of the EntryGroup.
     */
    description?: pulumi.Input<string>;
    /**
     * User friendly display name.
     */
    displayName?: pulumi.Input<string>;
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     */
    effectiveLabels?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The entry group id of the entry group.
     */
    entryGroupId?: pulumi.Input<string>;
    /**
     * User-defined labels for the EntryGroup.
     *
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The location where entry group will be created in.
     */
    location?: pulumi.Input<string>;
    /**
     * The relative resource name of the EntryGroup, of the form: projects/{project_number}/locations/{location_id}/entryGroups/{entry_group_id}
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     */
    pulumiLabels?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Denotes the transfer status of the Entry Group. It is unspecified
     * for Entry Group created from Dataplex API.
     */
    transferStatus?: pulumi.Input<string>;
    /**
     * System generated globally unique ID for the EntryGroup. This ID will be different if the EntryGroup is deleted and re-created with the same name.
     */
    uid?: pulumi.Input<string>;
    /**
     * The time when the EntryGroup was last updated.
     */
    updateTime?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a EntryGroup resource.
 */
export interface EntryGroupArgs {
    /**
     * Description of the EntryGroup.
     */
    description?: pulumi.Input<string>;
    /**
     * User friendly display name.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The entry group id of the entry group.
     */
    entryGroupId?: pulumi.Input<string>;
    /**
     * User-defined labels for the EntryGroup.
     *
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The location where entry group will be created in.
     */
    location?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
}
