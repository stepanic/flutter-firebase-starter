import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Provides access to a list of zones within Google Cloud DNS.
 * For more information see
 * [the official documentation](https://cloud.google.com/dns/zones/)
 * and
 * [API](https://cloud.google.com/dns/api/v1/managedZones).
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const zones = gcp.dns.getManagedZones({
 *     project: "my-project-id",
 * });
 * ```
 */
export declare function getManagedZones(args?: GetManagedZonesArgs, opts?: pulumi.InvokeOptions): Promise<GetManagedZonesResult>;
/**
 * A collection of arguments for invoking getManagedZones.
 */
export interface GetManagedZonesArgs {
    /**
     * The ID of the project containing Google Cloud DNS zones. If this is not provided the default project will be used.
     */
    project?: string;
}
/**
 * A collection of values returned by getManagedZones.
 */
export interface GetManagedZonesResult {
    readonly id: string;
    /**
     * A list of managed zones.
     */
    readonly managedZones: outputs.dns.GetManagedZonesManagedZone[];
    readonly project?: string;
}
/**
 * Provides access to a list of zones within Google Cloud DNS.
 * For more information see
 * [the official documentation](https://cloud.google.com/dns/zones/)
 * and
 * [API](https://cloud.google.com/dns/api/v1/managedZones).
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const zones = gcp.dns.getManagedZones({
 *     project: "my-project-id",
 * });
 * ```
 */
export declare function getManagedZonesOutput(args?: GetManagedZonesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetManagedZonesResult>;
/**
 * A collection of arguments for invoking getManagedZones.
 */
export interface GetManagedZonesOutputArgs {
    /**
     * The ID of the project containing Google Cloud DNS zones. If this is not provided the default project will be used.
     */
    project?: pulumi.Input<string>;
}
