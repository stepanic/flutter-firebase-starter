"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.DocumentAiWarehouseLocation = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * A location is used to initialize a project.
 *
 * To get more information about Location, see:
 *
 * * [API documentation](https://cloud.google.com/document-warehouse/docs/reference/rest/v1/projects.locations)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/document-warehouse/docs/overview)
 *
 * ## Example Usage
 *
 * ### Document Ai Warehouse Location
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const project = gcp.organizations.getProject({});
 * const example = new gcp.essentialcontacts.DocumentAiWarehouseLocation("example", {
 *     location: "us",
 *     projectNumber: project.then(project => project.number),
 *     accessControlMode: "ACL_MODE_DOCUMENT_LEVEL_ACCESS_CONTROL_GCI",
 *     databaseType: "DB_INFRA_SPANNER",
 *     kmsKey: "dummy_key",
 *     documentCreatorDefaultRole: "DOCUMENT_ADMIN",
 * });
 * ```
 *
 * ## Import
 *
 * This resource does not support import.
 */
class DocumentAiWarehouseLocation extends pulumi.CustomResource {
    /**
     * Get an existing DocumentAiWarehouseLocation resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new DocumentAiWarehouseLocation(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of DocumentAiWarehouseLocation.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DocumentAiWarehouseLocation.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["accessControlMode"] = state ? state.accessControlMode : undefined;
            resourceInputs["databaseType"] = state ? state.databaseType : undefined;
            resourceInputs["documentCreatorDefaultRole"] = state ? state.documentCreatorDefaultRole : undefined;
            resourceInputs["kmsKey"] = state ? state.kmsKey : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["projectNumber"] = state ? state.projectNumber : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.accessControlMode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'accessControlMode'");
            }
            if ((!args || args.databaseType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'databaseType'");
            }
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            if ((!args || args.projectNumber === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectNumber'");
            }
            resourceInputs["accessControlMode"] = args ? args.accessControlMode : undefined;
            resourceInputs["databaseType"] = args ? args.databaseType : undefined;
            resourceInputs["documentCreatorDefaultRole"] = args ? args.documentCreatorDefaultRole : undefined;
            resourceInputs["kmsKey"] = args ? args.kmsKey : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["projectNumber"] = args ? args.projectNumber : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DocumentAiWarehouseLocation.__pulumiType, name, resourceInputs, opts);
    }
}
exports.DocumentAiWarehouseLocation = DocumentAiWarehouseLocation;
/** @internal */
DocumentAiWarehouseLocation.__pulumiType = 'gcp:essentialcontacts/documentAiWarehouseLocation:DocumentAiWarehouseLocation';
//# sourceMappingURL=documentAiWarehouseLocation.js.map