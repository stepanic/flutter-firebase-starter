import * as pulumi from "@pulumi/pulumi";
/**
 * The enforcement configuration for a service supported by App Check.
 *
 * To get more information about ServiceConfig, see:
 *
 * * [API documentation](https://firebase.google.com/docs/reference/appcheck/rest/v1/projects.services)
 * * How-to Guides
 *     * [Official Documentation](https://firebase.google.com/docs/app-check)
 *
 * ## Example Usage
 *
 * ### Firebase App Check Service Config Off
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const appcheck = new gcp.projects.Service("appcheck", {
 *     project: "my-project-name",
 *     service: "firebaseappcheck.googleapis.com",
 *     disableOnDestroy: false,
 * });
 * const _default = new gcp.firebase.AppCheckServiceConfig("default", {
 *     project: "my-project-name",
 *     serviceId: "firestore.googleapis.com",
 * }, {
 *     dependsOn: [appcheck],
 * });
 * ```
 * ### Firebase App Check Service Config Enforced
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const appcheck = new gcp.projects.Service("appcheck", {
 *     project: "my-project-name",
 *     service: "firebaseappcheck.googleapis.com",
 *     disableOnDestroy: false,
 * });
 * const _default = new gcp.firebase.AppCheckServiceConfig("default", {
 *     project: "my-project-name",
 *     serviceId: "firebasestorage.googleapis.com",
 *     enforcementMode: "ENFORCED",
 * }, {
 *     dependsOn: [appcheck],
 * });
 * ```
 * ### Firebase App Check Service Config Unenforced
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const appcheck = new gcp.projects.Service("appcheck", {
 *     project: "my-project-name",
 *     service: "firebaseappcheck.googleapis.com",
 *     disableOnDestroy: false,
 * });
 * const _default = new gcp.firebase.AppCheckServiceConfig("default", {
 *     project: "my-project-name",
 *     serviceId: "identitytoolkit.googleapis.com",
 *     enforcementMode: "UNENFORCED",
 * }, {
 *     dependsOn: [appcheck],
 * });
 * ```
 *
 * ## Import
 *
 * ServiceConfig can be imported using any of these accepted formats:
 *
 * * `projects/{{project}}/services/{{service_id}}`
 *
 * * `{{project}}/{{service_id}}`
 *
 * * `{{service_id}}`
 *
 * When using the `pulumi import` command, ServiceConfig can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:firebase/appCheckServiceConfig:AppCheckServiceConfig default projects/{{project}}/services/{{service_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:firebase/appCheckServiceConfig:AppCheckServiceConfig default {{project}}/{{service_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:firebase/appCheckServiceConfig:AppCheckServiceConfig default {{service_id}}
 * ```
 */
export declare class AppCheckServiceConfig extends pulumi.CustomResource {
    /**
     * Get an existing AppCheckServiceConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AppCheckServiceConfigState, opts?: pulumi.CustomResourceOptions): AppCheckServiceConfig;
    /**
     * Returns true if the given object is an instance of AppCheckServiceConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is AppCheckServiceConfig;
    readonly enforcementMode: pulumi.Output<string | undefined>;
    /**
     * The fully-qualified resource name of the service enforcement configuration.
     */
    readonly name: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project: pulumi.Output<string>;
    /**
     * The identifier of the service to configure enforcement. Currently, the following service IDs are supported:
     * firebasestorage.googleapis.com (Cloud Storage for Firebase)
     * firebasedatabase.googleapis.com (Firebase Realtime Database)
     * firestore.googleapis.com (Cloud Firestore)
     * identitytoolkit.googleapis.com (Authentication)
     *
     *
     * - - -
     */
    readonly serviceId: pulumi.Output<string>;
    /**
     * Create a AppCheckServiceConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AppCheckServiceConfigArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering AppCheckServiceConfig resources.
 */
export interface AppCheckServiceConfigState {
    enforcementMode?: pulumi.Input<string>;
    /**
     * The fully-qualified resource name of the service enforcement configuration.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * The identifier of the service to configure enforcement. Currently, the following service IDs are supported:
     * firebasestorage.googleapis.com (Cloud Storage for Firebase)
     * firebasedatabase.googleapis.com (Firebase Realtime Database)
     * firestore.googleapis.com (Cloud Firestore)
     * identitytoolkit.googleapis.com (Authentication)
     *
     *
     * - - -
     */
    serviceId?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a AppCheckServiceConfig resource.
 */
export interface AppCheckServiceConfigArgs {
    enforcementMode?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * The identifier of the service to configure enforcement. Currently, the following service IDs are supported:
     * firebasestorage.googleapis.com (Cloud Storage for Firebase)
     * firebasedatabase.googleapis.com (Firebase Realtime Database)
     * firestore.googleapis.com (Cloud Firestore)
     * identitytoolkit.googleapis.com (Authentication)
     *
     *
     * - - -
     */
    serviceId: pulumi.Input<string>;
}
