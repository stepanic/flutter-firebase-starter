import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
export declare function getMembershipBinding(args: GetMembershipBindingArgs, opts?: pulumi.InvokeOptions): Promise<GetMembershipBindingResult>;
/**
 * A collection of arguments for invoking getMembershipBinding.
 */
export interface GetMembershipBindingArgs {
    location: string;
    membershipBindingId: string;
    membershipId: string;
    project?: string;
}
/**
 * A collection of values returned by getMembershipBinding.
 */
export interface GetMembershipBindingResult {
    readonly createTime: string;
    readonly deleteTime: string;
    readonly effectiveLabels: {
        [key: string]: string;
    };
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly labels: {
        [key: string]: string;
    };
    readonly location: string;
    readonly membershipBindingId: string;
    readonly membershipId: string;
    readonly name: string;
    readonly project?: string;
    readonly pulumiLabels: {
        [key: string]: string;
    };
    readonly scope: string;
    readonly states: outputs.gkehub.GetMembershipBindingState[];
    readonly uid: string;
    readonly updateTime: string;
}
export declare function getMembershipBindingOutput(args: GetMembershipBindingOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMembershipBindingResult>;
/**
 * A collection of arguments for invoking getMembershipBinding.
 */
export interface GetMembershipBindingOutputArgs {
    location: pulumi.Input<string>;
    membershipBindingId: pulumi.Input<string>;
    membershipId: pulumi.Input<string>;
    project?: pulumi.Input<string>;
}
