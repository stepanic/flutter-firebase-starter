"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ScopeRbacRoleBinding = exports.ScopeIamPolicy = exports.ScopeIamMember = exports.ScopeIamBinding = exports.Scope = exports.Namespace = exports.MembershipRbacRoleBinding = exports.MembershipIamPolicy = exports.MembershipIamMember = exports.MembershipIamBinding = exports.MembershipBinding = exports.Membership = exports.getScopeIamPolicyOutput = exports.getScopeIamPolicy = exports.getMembershipIamPolicyOutput = exports.getMembershipIamPolicy = exports.getMembershipBindingOutput = exports.getMembershipBinding = exports.getFeatureIamPolicyOutput = exports.getFeatureIamPolicy = exports.Fleet = exports.FeatureMembership = exports.FeatureIamPolicy = exports.FeatureIamMember = exports.FeatureIamBinding = exports.Feature = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.Feature = null;
utilities.lazyLoad(exports, ["Feature"], () => require("./feature"));
exports.FeatureIamBinding = null;
utilities.lazyLoad(exports, ["FeatureIamBinding"], () => require("./featureIamBinding"));
exports.FeatureIamMember = null;
utilities.lazyLoad(exports, ["FeatureIamMember"], () => require("./featureIamMember"));
exports.FeatureIamPolicy = null;
utilities.lazyLoad(exports, ["FeatureIamPolicy"], () => require("./featureIamPolicy"));
exports.FeatureMembership = null;
utilities.lazyLoad(exports, ["FeatureMembership"], () => require("./featureMembership"));
exports.Fleet = null;
utilities.lazyLoad(exports, ["Fleet"], () => require("./fleet"));
exports.getFeatureIamPolicy = null;
exports.getFeatureIamPolicyOutput = null;
utilities.lazyLoad(exports, ["getFeatureIamPolicy", "getFeatureIamPolicyOutput"], () => require("./getFeatureIamPolicy"));
exports.getMembershipBinding = null;
exports.getMembershipBindingOutput = null;
utilities.lazyLoad(exports, ["getMembershipBinding", "getMembershipBindingOutput"], () => require("./getMembershipBinding"));
exports.getMembershipIamPolicy = null;
exports.getMembershipIamPolicyOutput = null;
utilities.lazyLoad(exports, ["getMembershipIamPolicy", "getMembershipIamPolicyOutput"], () => require("./getMembershipIamPolicy"));
exports.getScopeIamPolicy = null;
exports.getScopeIamPolicyOutput = null;
utilities.lazyLoad(exports, ["getScopeIamPolicy", "getScopeIamPolicyOutput"], () => require("./getScopeIamPolicy"));
exports.Membership = null;
utilities.lazyLoad(exports, ["Membership"], () => require("./membership"));
exports.MembershipBinding = null;
utilities.lazyLoad(exports, ["MembershipBinding"], () => require("./membershipBinding"));
exports.MembershipIamBinding = null;
utilities.lazyLoad(exports, ["MembershipIamBinding"], () => require("./membershipIamBinding"));
exports.MembershipIamMember = null;
utilities.lazyLoad(exports, ["MembershipIamMember"], () => require("./membershipIamMember"));
exports.MembershipIamPolicy = null;
utilities.lazyLoad(exports, ["MembershipIamPolicy"], () => require("./membershipIamPolicy"));
exports.MembershipRbacRoleBinding = null;
utilities.lazyLoad(exports, ["MembershipRbacRoleBinding"], () => require("./membershipRbacRoleBinding"));
exports.Namespace = null;
utilities.lazyLoad(exports, ["Namespace"], () => require("./namespace"));
exports.Scope = null;
utilities.lazyLoad(exports, ["Scope"], () => require("./scope"));
exports.ScopeIamBinding = null;
utilities.lazyLoad(exports, ["ScopeIamBinding"], () => require("./scopeIamBinding"));
exports.ScopeIamMember = null;
utilities.lazyLoad(exports, ["ScopeIamMember"], () => require("./scopeIamMember"));
exports.ScopeIamPolicy = null;
utilities.lazyLoad(exports, ["ScopeIamPolicy"], () => require("./scopeIamPolicy"));
exports.ScopeRbacRoleBinding = null;
utilities.lazyLoad(exports, ["ScopeRbacRoleBinding"], () => require("./scopeRbacRoleBinding"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "gcp:gkehub/feature:Feature":
                return new exports.Feature(name, undefined, { urn });
            case "gcp:gkehub/featureIamBinding:FeatureIamBinding":
                return new exports.FeatureIamBinding(name, undefined, { urn });
            case "gcp:gkehub/featureIamMember:FeatureIamMember":
                return new exports.FeatureIamMember(name, undefined, { urn });
            case "gcp:gkehub/featureIamPolicy:FeatureIamPolicy":
                return new exports.FeatureIamPolicy(name, undefined, { urn });
            case "gcp:gkehub/featureMembership:FeatureMembership":
                return new exports.FeatureMembership(name, undefined, { urn });
            case "gcp:gkehub/fleet:Fleet":
                return new exports.Fleet(name, undefined, { urn });
            case "gcp:gkehub/membership:Membership":
                return new exports.Membership(name, undefined, { urn });
            case "gcp:gkehub/membershipBinding:MembershipBinding":
                return new exports.MembershipBinding(name, undefined, { urn });
            case "gcp:gkehub/membershipIamBinding:MembershipIamBinding":
                return new exports.MembershipIamBinding(name, undefined, { urn });
            case "gcp:gkehub/membershipIamMember:MembershipIamMember":
                return new exports.MembershipIamMember(name, undefined, { urn });
            case "gcp:gkehub/membershipIamPolicy:MembershipIamPolicy":
                return new exports.MembershipIamPolicy(name, undefined, { urn });
            case "gcp:gkehub/membershipRbacRoleBinding:MembershipRbacRoleBinding":
                return new exports.MembershipRbacRoleBinding(name, undefined, { urn });
            case "gcp:gkehub/namespace:Namespace":
                return new exports.Namespace(name, undefined, { urn });
            case "gcp:gkehub/scope:Scope":
                return new exports.Scope(name, undefined, { urn });
            case "gcp:gkehub/scopeIamBinding:ScopeIamBinding":
                return new exports.ScopeIamBinding(name, undefined, { urn });
            case "gcp:gkehub/scopeIamMember:ScopeIamMember":
                return new exports.ScopeIamMember(name, undefined, { urn });
            case "gcp:gkehub/scopeIamPolicy:ScopeIamPolicy":
                return new exports.ScopeIamPolicy(name, undefined, { urn });
            case "gcp:gkehub/scopeRbacRoleBinding:ScopeRbacRoleBinding":
                return new exports.ScopeRbacRoleBinding(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "gkehub/feature", _module);
pulumi.runtime.registerResourceModule("gcp", "gkehub/featureIamBinding", _module);
pulumi.runtime.registerResourceModule("gcp", "gkehub/featureIamMember", _module);
pulumi.runtime.registerResourceModule("gcp", "gkehub/featureIamPolicy", _module);
pulumi.runtime.registerResourceModule("gcp", "gkehub/featureMembership", _module);
pulumi.runtime.registerResourceModule("gcp", "gkehub/fleet", _module);
pulumi.runtime.registerResourceModule("gcp", "gkehub/membership", _module);
pulumi.runtime.registerResourceModule("gcp", "gkehub/membershipBinding", _module);
pulumi.runtime.registerResourceModule("gcp", "gkehub/membershipIamBinding", _module);
pulumi.runtime.registerResourceModule("gcp", "gkehub/membershipIamMember", _module);
pulumi.runtime.registerResourceModule("gcp", "gkehub/membershipIamPolicy", _module);
pulumi.runtime.registerResourceModule("gcp", "gkehub/membershipRbacRoleBinding", _module);
pulumi.runtime.registerResourceModule("gcp", "gkehub/namespace", _module);
pulumi.runtime.registerResourceModule("gcp", "gkehub/scope", _module);
pulumi.runtime.registerResourceModule("gcp", "gkehub/scopeIamBinding", _module);
pulumi.runtime.registerResourceModule("gcp", "gkehub/scopeIamMember", _module);
pulumi.runtime.registerResourceModule("gcp", "gkehub/scopeIamPolicy", _module);
pulumi.runtime.registerResourceModule("gcp", "gkehub/scopeRbacRoleBinding", _module);
//# sourceMappingURL=index.js.map