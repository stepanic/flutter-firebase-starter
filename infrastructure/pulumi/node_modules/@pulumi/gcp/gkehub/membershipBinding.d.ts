import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * MembershipBinding is a subresource of a Membership, representing what Fleet Scopes (or other, future Fleet resources) a Membership is bound to.
 *
 * To get more information about MembershipBinding, see:
 *
 * * [API documentation](https://cloud.google.com/anthos/fleet-management/docs/reference/rest/v1/projects.locations.memberships.bindings)
 * * How-to Guides
 *     * [Registering a Cluster](https://cloud.google.com/anthos/multicluster-management/connect/registering-a-cluster#register_cluster)
 *
 * ## Example Usage
 *
 * ### Gkehub Membership Binding Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const primary = new gcp.container.Cluster("primary", {
 *     name: "basic-cluster",
 *     location: "us-central1-a",
 *     initialNodeCount: 1,
 *     deletionProtection: true,
 *     network: "default",
 *     subnetwork: "default",
 * });
 * const membership = new gcp.gkehub.Membership("membership", {
 *     membershipId: "tf-test-membership_39249",
 *     endpoint: {
 *         gkeCluster: {
 *             resourceLink: pulumi.interpolate`//container.googleapis.com/${primary.id}`,
 *         },
 *     },
 * }, {
 *     dependsOn: [primary],
 * });
 * const scope = new gcp.gkehub.Scope("scope", {scopeId: "tf-test-scope_74391"});
 * const membershipBinding = new gcp.gkehub.MembershipBinding("membership_binding", {
 *     membershipBindingId: "tf-test-membership-binding_16511",
 *     scope: scope.name,
 *     membershipId: membership.membershipId,
 *     location: "global",
 *     labels: {
 *         keyb: "valueb",
 *         keya: "valuea",
 *         keyc: "valuec",
 *     },
 * }, {
 *     dependsOn: [
 *         membership,
 *         scope,
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * MembershipBinding can be imported using any of these accepted formats:
 *
 * * `projects/{{project}}/locations/{{location}}/memberships/{{membership_id}}/bindings/{{membership_binding_id}}`
 *
 * * `{{project}}/{{location}}/{{membership_id}}/{{membership_binding_id}}`
 *
 * * `{{location}}/{{membership_id}}/{{membership_binding_id}}`
 *
 * When using the `pulumi import` command, MembershipBinding can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:gkehub/membershipBinding:MembershipBinding default projects/{{project}}/locations/{{location}}/memberships/{{membership_id}}/bindings/{{membership_binding_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:gkehub/membershipBinding:MembershipBinding default {{project}}/{{location}}/{{membership_id}}/{{membership_binding_id}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:gkehub/membershipBinding:MembershipBinding default {{location}}/{{membership_id}}/{{membership_binding_id}}
 * ```
 */
export declare class MembershipBinding extends pulumi.CustomResource {
    /**
     * Get an existing MembershipBinding resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MembershipBindingState, opts?: pulumi.CustomResourceOptions): MembershipBinding;
    /**
     * Returns true if the given object is an instance of MembershipBinding.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is MembershipBinding;
    /**
     * Time the MembershipBinding was created in UTC.
     */
    readonly createTime: pulumi.Output<string>;
    /**
     * Time the MembershipBinding was deleted in UTC.
     */
    readonly deleteTime: pulumi.Output<string>;
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     */
    readonly effectiveLabels: pulumi.Output<{
        [key: string]: string;
    }>;
    /**
     * Labels for this Membership binding.
     *
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     */
    readonly labels: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Location of the membership
     *
     *
     * - - -
     */
    readonly location: pulumi.Output<string>;
    /**
     * The client-provided identifier of the membership binding.
     */
    readonly membershipBindingId: pulumi.Output<string>;
    /**
     * Id of the membership
     */
    readonly membershipId: pulumi.Output<string>;
    /**
     * The resource name for the membershipbinding itself
     */
    readonly name: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project: pulumi.Output<string>;
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     */
    readonly pulumiLabels: pulumi.Output<{
        [key: string]: string;
    }>;
    /**
     * A Workspace resource name in the format
     * `projects/*&#47;locations/*&#47;scopes/*`.
     */
    readonly scope: pulumi.Output<string>;
    /**
     * State of the membership binding resource.
     * Structure is documented below.
     */
    readonly states: pulumi.Output<outputs.gkehub.MembershipBindingState[]>;
    /**
     * Google-generated UUID for this resource.
     */
    readonly uid: pulumi.Output<string>;
    /**
     * Time the MembershipBinding was updated in UTC.
     */
    readonly updateTime: pulumi.Output<string>;
    /**
     * Create a MembershipBinding resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MembershipBindingArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering MembershipBinding resources.
 */
export interface MembershipBindingState {
    /**
     * Time the MembershipBinding was created in UTC.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Time the MembershipBinding was deleted in UTC.
     */
    deleteTime?: pulumi.Input<string>;
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     */
    effectiveLabels?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Labels for this Membership binding.
     *
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Location of the membership
     *
     *
     * - - -
     */
    location?: pulumi.Input<string>;
    /**
     * The client-provided identifier of the membership binding.
     */
    membershipBindingId?: pulumi.Input<string>;
    /**
     * Id of the membership
     */
    membershipId?: pulumi.Input<string>;
    /**
     * The resource name for the membershipbinding itself
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     */
    pulumiLabels?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * A Workspace resource name in the format
     * `projects/*&#47;locations/*&#47;scopes/*`.
     */
    scope?: pulumi.Input<string>;
    /**
     * State of the membership binding resource.
     * Structure is documented below.
     */
    states?: pulumi.Input<pulumi.Input<inputs.gkehub.MembershipBindingState>[]>;
    /**
     * Google-generated UUID for this resource.
     */
    uid?: pulumi.Input<string>;
    /**
     * Time the MembershipBinding was updated in UTC.
     */
    updateTime?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a MembershipBinding resource.
 */
export interface MembershipBindingArgs {
    /**
     * Labels for this Membership binding.
     *
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Location of the membership
     *
     *
     * - - -
     */
    location: pulumi.Input<string>;
    /**
     * The client-provided identifier of the membership binding.
     */
    membershipBindingId: pulumi.Input<string>;
    /**
     * Id of the membership
     */
    membershipId: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * A Workspace resource name in the format
     * `projects/*&#47;locations/*&#47;scopes/*`.
     */
    scope: pulumi.Input<string>;
}
