"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getConsentStoreIamPolicyOutput = exports.getConsentStoreIamPolicy = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Retrieves the current IAM policy data for consentstore
 *
 * ## example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const policy = gcp.healthcare.getConsentStoreIamPolicy({
 *     dataset: my_consent.dataset,
 *     consentStoreId: my_consent.name,
 * });
 * ```
 */
function getConsentStoreIamPolicy(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:healthcare/getConsentStoreIamPolicy:getConsentStoreIamPolicy", {
        "consentStoreId": args.consentStoreId,
        "dataset": args.dataset,
    }, opts);
}
exports.getConsentStoreIamPolicy = getConsentStoreIamPolicy;
/**
 * Retrieves the current IAM policy data for consentstore
 *
 * ## example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const policy = gcp.healthcare.getConsentStoreIamPolicy({
 *     dataset: my_consent.dataset,
 *     consentStoreId: my_consent.name,
 * });
 * ```
 */
function getConsentStoreIamPolicyOutput(args, opts) {
    return pulumi.output(args).apply((a) => getConsentStoreIamPolicy(a, opts));
}
exports.getConsentStoreIamPolicyOutput = getConsentStoreIamPolicyOutput;
//# sourceMappingURL=getConsentStoreIamPolicy.js.map