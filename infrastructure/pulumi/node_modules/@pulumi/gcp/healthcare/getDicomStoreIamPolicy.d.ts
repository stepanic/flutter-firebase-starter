import * as pulumi from "@pulumi/pulumi";
/**
 * Retrieves the current IAM policy data for a Google Cloud Healthcare DICOM store.
 *
 * ## example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const foo = gcp.healthcare.getDicomStoreIamPolicy({
 *     dicomStoreId: dicomStore.id,
 * });
 * ```
 */
export declare function getDicomStoreIamPolicy(args: GetDicomStoreIamPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetDicomStoreIamPolicyResult>;
/**
 * A collection of arguments for invoking getDicomStoreIamPolicy.
 */
export interface GetDicomStoreIamPolicyArgs {
    /**
     * The DICOM store ID, in the form
     * `{project_id}/{location_name}/{dataset_name}/{dicom_store_name}` or
     * `{location_name}/{dataset_name}/{dicom_store_name}`. In the second form, the provider's
     * project setting will be used as a fallback.
     */
    dicomStoreId: string;
}
/**
 * A collection of values returned by getDicomStoreIamPolicy.
 */
export interface GetDicomStoreIamPolicyResult {
    readonly dicomStoreId: string;
    /**
     * (Computed) The etag of the IAM policy.
     */
    readonly etag: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * (Computed) The policy data
     */
    readonly policyData: string;
}
/**
 * Retrieves the current IAM policy data for a Google Cloud Healthcare DICOM store.
 *
 * ## example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const foo = gcp.healthcare.getDicomStoreIamPolicy({
 *     dicomStoreId: dicomStore.id,
 * });
 * ```
 */
export declare function getDicomStoreIamPolicyOutput(args: GetDicomStoreIamPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetDicomStoreIamPolicyResult>;
/**
 * A collection of arguments for invoking getDicomStoreIamPolicy.
 */
export interface GetDicomStoreIamPolicyOutputArgs {
    /**
     * The DICOM store ID, in the form
     * `{project_id}/{location_name}/{dataset_name}/{dicom_store_name}` or
     * `{location_name}/{dataset_name}/{dicom_store_name}`. In the second form, the provider's
     * project setting will be used as a fallback.
     */
    dicomStoreId: pulumi.Input<string>;
}
