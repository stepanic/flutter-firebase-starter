import * as pulumi from "@pulumi/pulumi";
/**
 * An Integration connectors Managed Zone.
 *
 * To get more information about ManagedZone, see:
 *
 * * [API documentation](https://cloud.google.com/integration-connectors/docs/reference/rest/v1/projects.locations.global.managedZones)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/integration-connectors/docs)
 *
 * ## Example Usage
 *
 * ### Integration Connectors Managed Zone
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const targetProject = new gcp.organizations.Project("target_project", {
 *     projectId: "tf-test_34535",
 *     name: "tf-test_22375",
 *     orgId: "123456789",
 *     billingAccount: "000000-0000000-0000000-000000",
 * });
 * const testProject = gcp.organizations.getProject({});
 * const dnsPeerBinding = new gcp.projects.IAMMember("dns_peer_binding", {
 *     project: targetProject.projectId,
 *     role: "roles/dns.peer",
 *     member: testProject.then(testProject => `serviceAccount:service-${testProject.number}@gcp-sa-connectors.iam.gserviceaccount.com`),
 * });
 * const dns = new gcp.projects.Service("dns", {
 *     project: targetProject.projectId,
 *     service: "dns.googleapis.com",
 * });
 * const compute = new gcp.projects.Service("compute", {
 *     project: targetProject.projectId,
 *     service: "compute.googleapis.com",
 * });
 * const network = new gcp.compute.Network("network", {
 *     project: targetProject.projectId,
 *     name: "test",
 *     autoCreateSubnetworks: false,
 * }, {
 *     dependsOn: [compute],
 * });
 * const zone = new gcp.dns.ManagedZone("zone", {
 *     name: "tf-test-dns_29439",
 *     dnsName: "private_87786.example.com.",
 *     visibility: "private",
 *     privateVisibilityConfig: {
 *         networks: [{
 *             networkUrl: network.id,
 *         }],
 *     },
 * }, {
 *     dependsOn: [dns],
 * });
 * const testmanagedzone = new gcp.integrationconnectors.ManagedZone("testmanagedzone", {
 *     name: "test",
 *     description: "tf created description",
 *     labels: {
 *         intent: "example",
 *     },
 *     targetProject: targetProject.projectId,
 *     targetVpc: "test",
 *     dns: zone.dnsName,
 * }, {
 *     dependsOn: [
 *         dnsPeerBinding,
 *         zone,
 *     ],
 * });
 * ```
 *
 * ## Import
 *
 * ManagedZone can be imported using any of these accepted formats:
 *
 * * `projects/{{project}}/locations/global/managedZones/{{name}}`
 *
 * * `{{project}}/{{name}}`
 *
 * * `{{name}}`
 *
 * When using the `pulumi import` command, ManagedZone can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:integrationconnectors/managedZone:ManagedZone default projects/{{project}}/locations/global/managedZones/{{name}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:integrationconnectors/managedZone:ManagedZone default {{project}}/{{name}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:integrationconnectors/managedZone:ManagedZone default {{name}}
 * ```
 */
export declare class ManagedZone extends pulumi.CustomResource {
    /**
     * Get an existing ManagedZone resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ManagedZoneState, opts?: pulumi.CustomResourceOptions): ManagedZone;
    /**
     * Returns true if the given object is an instance of ManagedZone.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ManagedZone;
    /**
     * Time the Namespace was created in UTC.
     */
    readonly createTime: pulumi.Output<string>;
    /**
     * Description of the resource.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * DNS Name of the resource.
     */
    readonly dns: pulumi.Output<string>;
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     */
    readonly effectiveLabels: pulumi.Output<{
        [key: string]: string;
    }>;
    /**
     * Resource labels to represent user provided metadata.
     *
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     */
    readonly labels: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * Name of Managed Zone needs to be created.
     *
     *
     * - - -
     */
    readonly name: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project: pulumi.Output<string>;
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     */
    readonly pulumiLabels: pulumi.Output<{
        [key: string]: string;
    }>;
    /**
     * The name of the Target Project.
     */
    readonly targetProject: pulumi.Output<string>;
    /**
     * The name of the Target Project VPC Network.
     */
    readonly targetVpc: pulumi.Output<string>;
    /**
     * Time the Namespace was updated in UTC.
     */
    readonly updateTime: pulumi.Output<string>;
    /**
     * Create a ManagedZone resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ManagedZoneArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ManagedZone resources.
 */
export interface ManagedZoneState {
    /**
     * Time the Namespace was created in UTC.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Description of the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * DNS Name of the resource.
     */
    dns?: pulumi.Input<string>;
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     */
    effectiveLabels?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Resource labels to represent user provided metadata.
     *
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Name of Managed Zone needs to be created.
     *
     *
     * - - -
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     */
    pulumiLabels?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The name of the Target Project.
     */
    targetProject?: pulumi.Input<string>;
    /**
     * The name of the Target Project VPC Network.
     */
    targetVpc?: pulumi.Input<string>;
    /**
     * Time the Namespace was updated in UTC.
     */
    updateTime?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ManagedZone resource.
 */
export interface ManagedZoneArgs {
    /**
     * Description of the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * DNS Name of the resource.
     */
    dns: pulumi.Input<string>;
    /**
     * Resource labels to represent user provided metadata.
     *
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * Name of Managed Zone needs to be created.
     *
     *
     * - - -
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * The name of the Target Project.
     */
    targetProject: pulumi.Input<string>;
    /**
     * The name of the Target Project VPC Network.
     */
    targetVpc: pulumi.Input<string>;
}
