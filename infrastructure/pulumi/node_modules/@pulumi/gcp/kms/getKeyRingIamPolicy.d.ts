import * as pulumi from "@pulumi/pulumi";
/**
 * Retrieves the current IAM policy data for a Google Cloud KMS key ring.
 *
 * ## example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const testKeyRingIamPolicy = gcp.kms.getKeyRingIamPolicy({
 *     keyRingId: "{project_id}/{location_name}/{key_ring_name}",
 * });
 * ```
 */
export declare function getKeyRingIamPolicy(args: GetKeyRingIamPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetKeyRingIamPolicyResult>;
/**
 * A collection of arguments for invoking getKeyRingIamPolicy.
 */
export interface GetKeyRingIamPolicyArgs {
    /**
     * The key ring ID, in the form
     * `{project_id}/{location_name}/{key_ring_name}` or
     * `{location_name}/{key_ring_name}`. In the second form, the provider's
     * project setting will be used as a fallback.
     */
    keyRingId: string;
}
/**
 * A collection of values returned by getKeyRingIamPolicy.
 */
export interface GetKeyRingIamPolicyResult {
    /**
     * (Computed) The etag of the IAM policy.
     */
    readonly etag: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly keyRingId: string;
    /**
     * (Computed) The policy data
     */
    readonly policyData: string;
}
/**
 * Retrieves the current IAM policy data for a Google Cloud KMS key ring.
 *
 * ## example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const testKeyRingIamPolicy = gcp.kms.getKeyRingIamPolicy({
 *     keyRingId: "{project_id}/{location_name}/{key_ring_name}",
 * });
 * ```
 */
export declare function getKeyRingIamPolicyOutput(args: GetKeyRingIamPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetKeyRingIamPolicyResult>;
/**
 * A collection of arguments for invoking getKeyRingIamPolicy.
 */
export interface GetKeyRingIamPolicyOutputArgs {
    /**
     * The key ring ID, in the form
     * `{project_id}/{location_name}/{key_ring_name}` or
     * `{location_name}/{key_ring_name}`. In the second form, the provider's
     * project setting will be used as a fallback.
     */
    keyRingId: pulumi.Input<string>;
}
