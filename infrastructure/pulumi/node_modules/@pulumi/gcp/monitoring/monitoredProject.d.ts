import * as pulumi from "@pulumi/pulumi";
/**
 * A [project being monitored](https://cloud.google.com/monitoring/settings/multiple-projects#create-multi) by a Metrics Scope.
 *
 * To get more information about MonitoredProject, see:
 *
 * * [API documentation](https://cloud.google.com/monitoring/api/ref_v3/rest/v1/locations.global.metricsScopes.projects)
 * * How-to Guides
 *     * [Official Documentation](https://cloud.google.com/monitoring/settings/manage-api)
 *
 * ## Example Usage
 *
 * ### Monitoring Monitored Project Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const basic = new gcp.organizations.Project("basic", {
 *     projectId: "m-id",
 *     name: "m-id-display",
 *     orgId: "123456789",
 * });
 * const primary = new gcp.monitoring.MonitoredProject("primary", {
 *     metricsScope: "my-project-name",
 *     name: basic.projectId,
 * });
 * ```
 *
 * ## Import
 *
 * MonitoredProject can be imported using any of these accepted formats:
 *
 * * `v1/locations/global/metricsScopes/{{name}}`
 *
 * * `{{name}}`
 *
 * When using the `pulumi import` command, MonitoredProject can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:monitoring/monitoredProject:MonitoredProject default v1/locations/global/metricsScopes/{{name}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:monitoring/monitoredProject:MonitoredProject default {{name}}
 * ```
 */
export declare class MonitoredProject extends pulumi.CustomResource {
    /**
     * Get an existing MonitoredProject resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: MonitoredProjectState, opts?: pulumi.CustomResourceOptions): MonitoredProject;
    /**
     * Returns true if the given object is an instance of MonitoredProject.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is MonitoredProject;
    /**
     * Output only. The time when this `MonitoredProject` was created.
     */
    readonly createTime: pulumi.Output<string>;
    /**
     * Required. The resource name of the existing Metrics Scope that will monitor this project. Example: locations/global/metricsScopes/{SCOPING_PROJECT_ID_OR_NUMBER}
     *
     *
     * - - -
     */
    readonly metricsScope: pulumi.Output<string>;
    /**
     * Immutable. The resource name of the `MonitoredProject`. On input, the resource name includes the scoping project ID and monitored project ID. On output, it contains the equivalent project numbers. Example: `locations/global/metricsScopes/{SCOPING_PROJECT_ID_OR_NUMBER}/projects/{MONITORED_PROJECT_ID_OR_NUMBER}`
     */
    readonly name: pulumi.Output<string>;
    /**
     * Create a MonitoredProject resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: MonitoredProjectArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering MonitoredProject resources.
 */
export interface MonitoredProjectState {
    /**
     * Output only. The time when this `MonitoredProject` was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Required. The resource name of the existing Metrics Scope that will monitor this project. Example: locations/global/metricsScopes/{SCOPING_PROJECT_ID_OR_NUMBER}
     *
     *
     * - - -
     */
    metricsScope?: pulumi.Input<string>;
    /**
     * Immutable. The resource name of the `MonitoredProject`. On input, the resource name includes the scoping project ID and monitored project ID. On output, it contains the equivalent project numbers. Example: `locations/global/metricsScopes/{SCOPING_PROJECT_ID_OR_NUMBER}/projects/{MONITORED_PROJECT_ID_OR_NUMBER}`
     */
    name?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a MonitoredProject resource.
 */
export interface MonitoredProjectArgs {
    /**
     * Required. The resource name of the existing Metrics Scope that will monitor this project. Example: locations/global/metricsScopes/{SCOPING_PROJECT_ID_OR_NUMBER}
     *
     *
     * - - -
     */
    metricsScope: pulumi.Input<string>;
    /**
     * Immutable. The resource name of the `MonitoredProject`. On input, the resource name includes the scoping project ID and monitored project ID. On output, it contains the equivalent project numbers. Example: `locations/global/metricsScopes/{SCOPING_PROJECT_ID_OR_NUMBER}/projects/{MONITORED_PROJECT_ID_OR_NUMBER}`
     */
    name?: pulumi.Input<string>;
}
