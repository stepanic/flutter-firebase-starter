"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.VolumeSnapshot = exports.VolumeReplication = exports.Volume = exports.StoragePool = exports.Kmsconfig = exports.BackupVault = exports.BackupPolicy = exports.Backup = exports.ActiveDirectory = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.ActiveDirectory = null;
utilities.lazyLoad(exports, ["ActiveDirectory"], () => require("./activeDirectory"));
exports.Backup = null;
utilities.lazyLoad(exports, ["Backup"], () => require("./backup"));
exports.BackupPolicy = null;
utilities.lazyLoad(exports, ["BackupPolicy"], () => require("./backupPolicy"));
exports.BackupVault = null;
utilities.lazyLoad(exports, ["BackupVault"], () => require("./backupVault"));
exports.Kmsconfig = null;
utilities.lazyLoad(exports, ["Kmsconfig"], () => require("./kmsconfig"));
exports.StoragePool = null;
utilities.lazyLoad(exports, ["StoragePool"], () => require("./storagePool"));
exports.Volume = null;
utilities.lazyLoad(exports, ["Volume"], () => require("./volume"));
exports.VolumeReplication = null;
utilities.lazyLoad(exports, ["VolumeReplication"], () => require("./volumeReplication"));
exports.VolumeSnapshot = null;
utilities.lazyLoad(exports, ["VolumeSnapshot"], () => require("./volumeSnapshot"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "gcp:netapp/activeDirectory:ActiveDirectory":
                return new exports.ActiveDirectory(name, undefined, { urn });
            case "gcp:netapp/backup:Backup":
                return new exports.Backup(name, undefined, { urn });
            case "gcp:netapp/backupPolicy:BackupPolicy":
                return new exports.BackupPolicy(name, undefined, { urn });
            case "gcp:netapp/backupVault:BackupVault":
                return new exports.BackupVault(name, undefined, { urn });
            case "gcp:netapp/kmsconfig:Kmsconfig":
                return new exports.Kmsconfig(name, undefined, { urn });
            case "gcp:netapp/storagePool:StoragePool":
                return new exports.StoragePool(name, undefined, { urn });
            case "gcp:netapp/volume:Volume":
                return new exports.Volume(name, undefined, { urn });
            case "gcp:netapp/volumeReplication:VolumeReplication":
                return new exports.VolumeReplication(name, undefined, { urn });
            case "gcp:netapp/volumeSnapshot:VolumeSnapshot":
                return new exports.VolumeSnapshot(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "netapp/activeDirectory", _module);
pulumi.runtime.registerResourceModule("gcp", "netapp/backup", _module);
pulumi.runtime.registerResourceModule("gcp", "netapp/backupPolicy", _module);
pulumi.runtime.registerResourceModule("gcp", "netapp/backupVault", _module);
pulumi.runtime.registerResourceModule("gcp", "netapp/kmsconfig", _module);
pulumi.runtime.registerResourceModule("gcp", "netapp/storagePool", _module);
pulumi.runtime.registerResourceModule("gcp", "netapp/volume", _module);
pulumi.runtime.registerResourceModule("gcp", "netapp/volumeReplication", _module);
pulumi.runtime.registerResourceModule("gcp", "netapp/volumeSnapshot", _module);
//# sourceMappingURL=index.js.map