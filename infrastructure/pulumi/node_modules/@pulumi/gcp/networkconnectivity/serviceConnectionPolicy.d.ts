import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
/**
 * Manage Service Connection Policies.
 *
 * To get more information about ServiceConnectionPolicy, see:
 *
 * * [API documentation](https://cloud.google.com/secure-web-proxy/docs/reference/networkconnectivity/rest/v1/projects.locations.networkConnectionPolicies)
 * * How-to Guides
 *     * [About Service Connection Policies](https://cloud.google.com/vpc/docs/about-service-connection-policies#service-policies)
 *
 * ## Example Usage
 *
 * ### Network Connectivity Policy Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const producerNet = new gcp.compute.Network("producer_net", {
 *     name: "producer-net",
 *     autoCreateSubnetworks: false,
 * });
 * const producerSubnet = new gcp.compute.Subnetwork("producer_subnet", {
 *     name: "producer-subnet",
 *     ipCidrRange: "10.0.0.0/16",
 *     region: "us-central1",
 *     network: producerNet.id,
 * });
 * const _default = new gcp.networkconnectivity.ServiceConnectionPolicy("default", {
 *     name: "my-network-connectivity-policy",
 *     location: "us-central1",
 *     serviceClass: "my-basic-service-class",
 *     description: "my basic service connection policy",
 *     network: producerNet.id,
 *     pscConfig: {
 *         subnetworks: [producerSubnet.id],
 *         limit: "2",
 *     },
 * });
 * ```
 *
 * ## Import
 *
 * ServiceConnectionPolicy can be imported using any of these accepted formats:
 *
 * * `projects/{{project}}/locations/{{location}}/serviceConnectionPolicies/{{name}}`
 *
 * * `{{project}}/{{location}}/{{name}}`
 *
 * * `{{location}}/{{name}}`
 *
 * When using the `pulumi import` command, ServiceConnectionPolicy can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:networkconnectivity/serviceConnectionPolicy:ServiceConnectionPolicy default projects/{{project}}/locations/{{location}}/serviceConnectionPolicies/{{name}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:networkconnectivity/serviceConnectionPolicy:ServiceConnectionPolicy default {{project}}/{{location}}/{{name}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:networkconnectivity/serviceConnectionPolicy:ServiceConnectionPolicy default {{location}}/{{name}}
 * ```
 */
export declare class ServiceConnectionPolicy extends pulumi.CustomResource {
    /**
     * Get an existing ServiceConnectionPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServiceConnectionPolicyState, opts?: pulumi.CustomResourceOptions): ServiceConnectionPolicy;
    /**
     * Returns true if the given object is an instance of ServiceConnectionPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj: any): obj is ServiceConnectionPolicy;
    /**
     * The timestamp when the resource was created.
     */
    readonly createTime: pulumi.Output<string>;
    /**
     * Free-text description of the resource.
     */
    readonly description: pulumi.Output<string | undefined>;
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     */
    readonly effectiveLabels: pulumi.Output<{
        [key: string]: string;
    }>;
    /**
     * The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
     */
    readonly etag: pulumi.Output<string>;
    /**
     * The type of underlying resources used to create the connection.
     */
    readonly infrastructure: pulumi.Output<string>;
    /**
     * User-defined labels.
     *
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     */
    readonly labels: pulumi.Output<{
        [key: string]: string;
    } | undefined>;
    /**
     * The location of the ServiceConnectionPolicy.
     *
     *
     * - - -
     */
    readonly location: pulumi.Output<string>;
    /**
     * The name of a ServiceConnectionPolicy. Format: projects/{project}/locations/{location}/serviceConnectionPolicies/{service_connection_policy} See: https://google.aip.dev/122#fields-representing-resource-names
     */
    readonly name: pulumi.Output<string>;
    /**
     * The resource path of the consumer network. Example: - projects/{projectNumOrId}/global/networks/{resourceId}.
     */
    readonly network: pulumi.Output<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    readonly project: pulumi.Output<string>;
    /**
     * Configuration used for Private Service Connect connections. Used when Infrastructure is PSC.
     * Structure is documented below.
     */
    readonly pscConfig: pulumi.Output<outputs.networkconnectivity.ServiceConnectionPolicyPscConfig | undefined>;
    /**
     * Information about each Private Service Connect connection.
     * Structure is documented below.
     */
    readonly pscConnections: pulumi.Output<outputs.networkconnectivity.ServiceConnectionPolicyPscConnection[]>;
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     */
    readonly pulumiLabels: pulumi.Output<{
        [key: string]: string;
    }>;
    /**
     * The service class identifier for which this ServiceConnectionPolicy is for. The service class identifier is a unique, symbolic representation of a ServiceClass.
     * It is provided by the Service Producer. Google services have a prefix of gcp. For example, gcp-cloud-sql. 3rd party services do not. For example, test-service-a3dfcx.
     */
    readonly serviceClass: pulumi.Output<string>;
    /**
     * The timestamp when the resource was updated.
     */
    readonly updateTime: pulumi.Output<string>;
    /**
     * Create a ServiceConnectionPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceConnectionPolicyArgs, opts?: pulumi.CustomResourceOptions);
}
/**
 * Input properties used for looking up and filtering ServiceConnectionPolicy resources.
 */
export interface ServiceConnectionPolicyState {
    /**
     * The timestamp when the resource was created.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Free-text description of the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * All of labels (key/value pairs) present on the resource in GCP, including the labels configured through Pulumi, other clients and services.
     */
    effectiveLabels?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The etag is computed by the server, and may be sent on update and delete requests to ensure the client has an up-to-date value before proceeding.
     */
    etag?: pulumi.Input<string>;
    /**
     * The type of underlying resources used to create the connection.
     */
    infrastructure?: pulumi.Input<string>;
    /**
     * User-defined labels.
     *
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The location of the ServiceConnectionPolicy.
     *
     *
     * - - -
     */
    location?: pulumi.Input<string>;
    /**
     * The name of a ServiceConnectionPolicy. Format: projects/{project}/locations/{location}/serviceConnectionPolicies/{service_connection_policy} See: https://google.aip.dev/122#fields-representing-resource-names
     */
    name?: pulumi.Input<string>;
    /**
     * The resource path of the consumer network. Example: - projects/{projectNumOrId}/global/networks/{resourceId}.
     */
    network?: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * Configuration used for Private Service Connect connections. Used when Infrastructure is PSC.
     * Structure is documented below.
     */
    pscConfig?: pulumi.Input<inputs.networkconnectivity.ServiceConnectionPolicyPscConfig>;
    /**
     * Information about each Private Service Connect connection.
     * Structure is documented below.
     */
    pscConnections?: pulumi.Input<pulumi.Input<inputs.networkconnectivity.ServiceConnectionPolicyPscConnection>[]>;
    /**
     * The combination of labels configured directly on the resource
     * and default labels configured on the provider.
     */
    pulumiLabels?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The service class identifier for which this ServiceConnectionPolicy is for. The service class identifier is a unique, symbolic representation of a ServiceClass.
     * It is provided by the Service Producer. Google services have a prefix of gcp. For example, gcp-cloud-sql. 3rd party services do not. For example, test-service-a3dfcx.
     */
    serviceClass?: pulumi.Input<string>;
    /**
     * The timestamp when the resource was updated.
     */
    updateTime?: pulumi.Input<string>;
}
/**
 * The set of arguments for constructing a ServiceConnectionPolicy resource.
 */
export interface ServiceConnectionPolicyArgs {
    /**
     * Free-text description of the resource.
     */
    description?: pulumi.Input<string>;
    /**
     * User-defined labels.
     *
     * **Note**: This field is non-authoritative, and will only manage the labels present in your configuration.
     * Please refer to the field `effectiveLabels` for all of the labels present on the resource.
     */
    labels?: pulumi.Input<{
        [key: string]: pulumi.Input<string>;
    }>;
    /**
     * The location of the ServiceConnectionPolicy.
     *
     *
     * - - -
     */
    location: pulumi.Input<string>;
    /**
     * The name of a ServiceConnectionPolicy. Format: projects/{project}/locations/{location}/serviceConnectionPolicies/{service_connection_policy} See: https://google.aip.dev/122#fields-representing-resource-names
     */
    name?: pulumi.Input<string>;
    /**
     * The resource path of the consumer network. Example: - projects/{projectNumOrId}/global/networks/{resourceId}.
     */
    network: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the provider project is used.
     */
    project?: pulumi.Input<string>;
    /**
     * Configuration used for Private Service Connect connections. Used when Infrastructure is PSC.
     * Structure is documented below.
     */
    pscConfig?: pulumi.Input<inputs.networkconnectivity.ServiceConnectionPolicyPscConfig>;
    /**
     * The service class identifier for which this ServiceConnectionPolicy is for. The service class identifier is a unique, symbolic representation of a ServiceClass.
     * It is provided by the Service Producer. Google services have a prefix of gcp. For example, gcp-cloud-sql. 3rd party services do not. For example, test-service-a3dfcx.
     */
    serviceClass: pulumi.Input<string>;
}
