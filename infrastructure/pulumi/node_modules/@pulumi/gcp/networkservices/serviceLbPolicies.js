"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ServiceLbPolicies = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * ## Example Usage
 *
 * ### Network Services Service Lb Policies Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const _default = new gcp.networkservices.ServiceLbPolicies("default", {
 *     name: "my-lb-policy",
 *     location: "global",
 * });
 * ```
 * ### Network Services Service Lb Policies Advanced
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const _default = new gcp.networkservices.ServiceLbPolicies("default", {
 *     name: "my-lb-policy",
 *     location: "global",
 *     description: "my description",
 *     loadBalancingAlgorithm: "SPRAY_TO_REGION",
 *     autoCapacityDrain: {
 *         enable: true,
 *     },
 *     failoverConfig: {
 *         failoverHealthThreshold: 70,
 *     },
 *     labels: {
 *         foo: "bar",
 *     },
 * });
 * const defaultBackendService = new gcp.compute.BackendService("default", {
 *     name: "my-lb-backend",
 *     description: "my description",
 *     loadBalancingScheme: "INTERNAL_SELF_MANAGED",
 *     protocol: "HTTP",
 *     serviceLbPolicy: pulumi.interpolate`//networkservices.googleapis.com/${_default.id}`,
 * });
 * ```
 *
 * ## Import
 *
 * ServiceLbPolicies can be imported using any of these accepted formats:
 *
 * * `projects/{{project}}/locations/{{location}}/serviceLbPolicies/{{name}}`
 *
 * * `{{project}}/{{location}}/{{name}}`
 *
 * * `{{location}}/{{name}}`
 *
 * When using the `pulumi import` command, ServiceLbPolicies can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:networkservices/serviceLbPolicies:ServiceLbPolicies default projects/{{project}}/locations/{{location}}/serviceLbPolicies/{{name}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:networkservices/serviceLbPolicies:ServiceLbPolicies default {{project}}/{{location}}/{{name}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:networkservices/serviceLbPolicies:ServiceLbPolicies default {{location}}/{{name}}
 * ```
 */
class ServiceLbPolicies extends pulumi.CustomResource {
    /**
     * Get an existing ServiceLbPolicies resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ServiceLbPolicies(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ServiceLbPolicies.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServiceLbPolicies.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["autoCapacityDrain"] = state ? state.autoCapacityDrain : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["effectiveLabels"] = state ? state.effectiveLabels : undefined;
            resourceInputs["failoverConfig"] = state ? state.failoverConfig : undefined;
            resourceInputs["labels"] = state ? state.labels : undefined;
            resourceInputs["loadBalancingAlgorithm"] = state ? state.loadBalancingAlgorithm : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["project"] = state ? state.project : undefined;
            resourceInputs["pulumiLabels"] = state ? state.pulumiLabels : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.location === undefined) && !opts.urn) {
                throw new Error("Missing required property 'location'");
            }
            resourceInputs["autoCapacityDrain"] = args ? args.autoCapacityDrain : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["failoverConfig"] = args ? args.failoverConfig : undefined;
            resourceInputs["labels"] = args ? args.labels : undefined;
            resourceInputs["loadBalancingAlgorithm"] = args ? args.loadBalancingAlgorithm : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["project"] = args ? args.project : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["effectiveLabels"] = undefined /*out*/;
            resourceInputs["pulumiLabels"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["effectiveLabels", "pulumiLabels"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ServiceLbPolicies.__pulumiType, name, resourceInputs, opts);
    }
}
exports.ServiceLbPolicies = ServiceLbPolicies;
/** @internal */
ServiceLbPolicies.__pulumiType = 'gcp:networkservices/serviceLbPolicies:ServiceLbPolicies';
//# sourceMappingURL=serviceLbPolicies.js.map