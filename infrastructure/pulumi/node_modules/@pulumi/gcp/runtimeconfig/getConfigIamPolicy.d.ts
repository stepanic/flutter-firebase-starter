import * as pulumi from "@pulumi/pulumi";
export declare function getConfigIamPolicy(args: GetConfigIamPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetConfigIamPolicyResult>;
/**
 * A collection of arguments for invoking getConfigIamPolicy.
 */
export interface GetConfigIamPolicyArgs {
    /**
     * Used to find the parent resource to bind the IAM policy to
     */
    config: string;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     */
    project?: string;
}
/**
 * A collection of values returned by getConfigIamPolicy.
 */
export interface GetConfigIamPolicyResult {
    readonly config: string;
    /**
     * (Computed) The etag of the IAM policy.
     */
    readonly etag: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * (Required only by `gcp.runtimeconfig.ConfigIamPolicy`) The policy data generated by
     * a `gcp.organizations.getIAMPolicy` data source.
     */
    readonly policyData: string;
    readonly project: string;
}
export declare function getConfigIamPolicyOutput(args: GetConfigIamPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetConfigIamPolicyResult>;
/**
 * A collection of arguments for invoking getConfigIamPolicy.
 */
export interface GetConfigIamPolicyOutputArgs {
    /**
     * Used to find the parent resource to bind the IAM policy to
     */
    config: pulumi.Input<string>;
    /**
     * The ID of the project in which the resource belongs.
     * If it is not provided, the project will be parsed from the identifier of the parent resource. If no project is provided in the parent identifier and no project is specified, the provider project is used.
     */
    project?: pulumi.Input<string>;
}
