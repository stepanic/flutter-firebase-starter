"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.getSecretVersionAccessOutput = exports.getSecretVersionAccess = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Get the value from a Secret Manager secret version. This is similar to the gcp.secretmanager.SecretVersion datasource, but it only requires the [Secret Manager Secret Accessor](https://cloud.google.com/secret-manager/docs/access-control#secretmanager.secretAccessor) role. For more information see the [official documentation](https://cloud.google.com/secret-manager/docs/) and [API](https://cloud.google.com/secret-manager/docs/reference/rest/v1/projects.secrets.versions/access).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const basic = gcp.secretmanager.getSecretVersionAccess({
 *     secret: "my-secret",
 * });
 * ```
 */
function getSecretVersionAccess(args, opts) {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("gcp:secretmanager/getSecretVersionAccess:getSecretVersionAccess", {
        "project": args.project,
        "secret": args.secret,
        "version": args.version,
    }, opts);
}
exports.getSecretVersionAccess = getSecretVersionAccess;
/**
 * Get the value from a Secret Manager secret version. This is similar to the gcp.secretmanager.SecretVersion datasource, but it only requires the [Secret Manager Secret Accessor](https://cloud.google.com/secret-manager/docs/access-control#secretmanager.secretAccessor) role. For more information see the [official documentation](https://cloud.google.com/secret-manager/docs/) and [API](https://cloud.google.com/secret-manager/docs/reference/rest/v1/projects.secrets.versions/access).
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const basic = gcp.secretmanager.getSecretVersionAccess({
 *     secret: "my-secret",
 * });
 * ```
 */
function getSecretVersionAccessOutput(args, opts) {
    return pulumi.output(args).apply((a) => getSecretVersionAccess(a, opts));
}
exports.getSecretVersionAccessOutput = getSecretVersionAccessOutput;
//# sourceMappingURL=getSecretVersionAccess.js.map