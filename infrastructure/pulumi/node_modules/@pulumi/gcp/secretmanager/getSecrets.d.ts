import * as pulumi from "@pulumi/pulumi";
import * as outputs from "../types/output";
/**
 * Use this data source to list the Secret Manager Secrets
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const secrets = gcp.secretmanager.getSecrets({});
 * ```
 */
export declare function getSecrets(args?: GetSecretsArgs, opts?: pulumi.InvokeOptions): Promise<GetSecretsResult>;
/**
 * A collection of arguments for invoking getSecrets.
 */
export interface GetSecretsArgs {
    /**
     * Filter string, adhering to the rules in [List-operation filtering](https://cloud.google.com/secret-manager/docs/filtering). List only secrets matching the filter. If filter is empty, all secrets are listed.
     */
    filter?: string;
    /**
     * The ID of the project.
     */
    project?: string;
}
/**
 * A collection of values returned by getSecrets.
 */
export interface GetSecretsResult {
    readonly filter?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The ID of the project in which the resource belongs.
     */
    readonly project: string;
    /**
     * A list of secrets matching the filter. Structure is defined below.
     */
    readonly secrets: outputs.secretmanager.GetSecretsSecret[];
}
/**
 * Use this data source to list the Secret Manager Secrets
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const secrets = gcp.secretmanager.getSecrets({});
 * ```
 */
export declare function getSecretsOutput(args?: GetSecretsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetSecretsResult>;
/**
 * A collection of arguments for invoking getSecrets.
 */
export interface GetSecretsOutputArgs {
    /**
     * Filter string, adhering to the rules in [List-operation filtering](https://cloud.google.com/secret-manager/docs/filtering). List only secrets matching the filter. If filter is empty, all secrets are listed.
     */
    filter?: pulumi.Input<string>;
    /**
     * The ID of the project.
     */
    project?: pulumi.Input<string>;
}
