"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.RepositoryIamPolicy = exports.RepositoryIamMember = exports.RepositoryIamBinding = exports.Repository = exports.InstanceIamPolicy = exports.InstanceIamMember = exports.InstanceIamBinding = exports.Instance = exports.getRepositoryIamPolicyOutput = exports.getRepositoryIamPolicy = exports.getInstanceIamPolicyOutput = exports.getInstanceIamPolicy = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.getInstanceIamPolicy = null;
exports.getInstanceIamPolicyOutput = null;
utilities.lazyLoad(exports, ["getInstanceIamPolicy", "getInstanceIamPolicyOutput"], () => require("./getInstanceIamPolicy"));
exports.getRepositoryIamPolicy = null;
exports.getRepositoryIamPolicyOutput = null;
utilities.lazyLoad(exports, ["getRepositoryIamPolicy", "getRepositoryIamPolicyOutput"], () => require("./getRepositoryIamPolicy"));
exports.Instance = null;
utilities.lazyLoad(exports, ["Instance"], () => require("./instance"));
exports.InstanceIamBinding = null;
utilities.lazyLoad(exports, ["InstanceIamBinding"], () => require("./instanceIamBinding"));
exports.InstanceIamMember = null;
utilities.lazyLoad(exports, ["InstanceIamMember"], () => require("./instanceIamMember"));
exports.InstanceIamPolicy = null;
utilities.lazyLoad(exports, ["InstanceIamPolicy"], () => require("./instanceIamPolicy"));
exports.Repository = null;
utilities.lazyLoad(exports, ["Repository"], () => require("./repository"));
exports.RepositoryIamBinding = null;
utilities.lazyLoad(exports, ["RepositoryIamBinding"], () => require("./repositoryIamBinding"));
exports.RepositoryIamMember = null;
utilities.lazyLoad(exports, ["RepositoryIamMember"], () => require("./repositoryIamMember"));
exports.RepositoryIamPolicy = null;
utilities.lazyLoad(exports, ["RepositoryIamPolicy"], () => require("./repositoryIamPolicy"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "gcp:securesourcemanager/instance:Instance":
                return new exports.Instance(name, undefined, { urn });
            case "gcp:securesourcemanager/instanceIamBinding:InstanceIamBinding":
                return new exports.InstanceIamBinding(name, undefined, { urn });
            case "gcp:securesourcemanager/instanceIamMember:InstanceIamMember":
                return new exports.InstanceIamMember(name, undefined, { urn });
            case "gcp:securesourcemanager/instanceIamPolicy:InstanceIamPolicy":
                return new exports.InstanceIamPolicy(name, undefined, { urn });
            case "gcp:securesourcemanager/repository:Repository":
                return new exports.Repository(name, undefined, { urn });
            case "gcp:securesourcemanager/repositoryIamBinding:RepositoryIamBinding":
                return new exports.RepositoryIamBinding(name, undefined, { urn });
            case "gcp:securesourcemanager/repositoryIamMember:RepositoryIamMember":
                return new exports.RepositoryIamMember(name, undefined, { urn });
            case "gcp:securesourcemanager/repositoryIamPolicy:RepositoryIamPolicy":
                return new exports.RepositoryIamPolicy(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "securesourcemanager/instance", _module);
pulumi.runtime.registerResourceModule("gcp", "securesourcemanager/instanceIamBinding", _module);
pulumi.runtime.registerResourceModule("gcp", "securesourcemanager/instanceIamMember", _module);
pulumi.runtime.registerResourceModule("gcp", "securesourcemanager/instanceIamPolicy", _module);
pulumi.runtime.registerResourceModule("gcp", "securesourcemanager/repository", _module);
pulumi.runtime.registerResourceModule("gcp", "securesourcemanager/repositoryIamBinding", _module);
pulumi.runtime.registerResourceModule("gcp", "securesourcemanager/repositoryIamMember", _module);
pulumi.runtime.registerResourceModule("gcp", "securesourcemanager/repositoryIamPolicy", _module);
//# sourceMappingURL=index.js.map