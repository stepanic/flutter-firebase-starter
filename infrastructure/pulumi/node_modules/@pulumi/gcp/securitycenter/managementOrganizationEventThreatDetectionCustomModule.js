"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ManagementOrganizationEventThreatDetectionCustomModule = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * Represents an instance of an Event Threat Detection custom module, including
 * its full module name, display name, enablement state, and last updated time.
 * You can create a custom module at the organization level only.
 *
 * To get more information about OrganizationEventThreatDetectionCustomModule, see:
 *
 * * [API documentation](https://cloud.google.com/security-command-center/docs/reference/security-center-management/rest/v1/organizations.locations.eventThreatDetectionCustomModules)
 * * How-to Guides
 *     * [Overview of custom modules for Event Threat Detection](https://cloud.google.com/security-command-center/docs/custom-modules-etd-overview)
 *
 * ## Example Usage
 *
 * ## Import
 *
 * OrganizationEventThreatDetectionCustomModule can be imported using any of these accepted formats:
 *
 * * `organizations/{{organization}}/locations/{{location}}/eventThreatDetectionCustomModules/{{name}}`
 *
 * * `{{organization}}/{{location}}/{{name}}`
 *
 * When using the `pulumi import` command, OrganizationEventThreatDetectionCustomModule can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:securitycenter/managementOrganizationEventThreatDetectionCustomModule:ManagementOrganizationEventThreatDetectionCustomModule default organizations/{{organization}}/locations/{{location}}/eventThreatDetectionCustomModules/{{name}}
 * ```
 *
 * ```sh
 * $ pulumi import gcp:securitycenter/managementOrganizationEventThreatDetectionCustomModule:ManagementOrganizationEventThreatDetectionCustomModule default {{organization}}/{{location}}/{{name}}
 * ```
 */
class ManagementOrganizationEventThreatDetectionCustomModule extends pulumi.CustomResource {
    /**
     * Get an existing ManagementOrganizationEventThreatDetectionCustomModule resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ManagementOrganizationEventThreatDetectionCustomModule(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ManagementOrganizationEventThreatDetectionCustomModule.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ManagementOrganizationEventThreatDetectionCustomModule.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["config"] = state ? state.config : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["enablementState"] = state ? state.enablementState : undefined;
            resourceInputs["lastEditor"] = state ? state.lastEditor : undefined;
            resourceInputs["location"] = state ? state.location : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["organization"] = state ? state.organization : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.organization === undefined) && !opts.urn) {
                throw new Error("Missing required property 'organization'");
            }
            resourceInputs["config"] = args ? args.config : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["enablementState"] = args ? args.enablementState : undefined;
            resourceInputs["location"] = args ? args.location : undefined;
            resourceInputs["organization"] = args ? args.organization : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
            resourceInputs["lastEditor"] = undefined /*out*/;
            resourceInputs["name"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ManagementOrganizationEventThreatDetectionCustomModule.__pulumiType, name, resourceInputs, opts);
    }
}
exports.ManagementOrganizationEventThreatDetectionCustomModule = ManagementOrganizationEventThreatDetectionCustomModule;
/** @internal */
ManagementOrganizationEventThreatDetectionCustomModule.__pulumiType = 'gcp:securitycenter/managementOrganizationEventThreatDetectionCustomModule:ManagementOrganizationEventThreatDetectionCustomModule';
//# sourceMappingURL=managementOrganizationEventThreatDetectionCustomModule.js.map