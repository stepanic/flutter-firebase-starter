import * as pulumi from "@pulumi/pulumi";
/**
 * Retrieves the current IAM policy data for tagkey
 *
 * ## example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const policy = gcp.tags.getTagKeyIamPolicy({
 *     tagKey: key.name,
 * });
 * ```
 */
export declare function getTagKeyIamPolicy(args: GetTagKeyIamPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetTagKeyIamPolicyResult>;
/**
 * A collection of arguments for invoking getTagKeyIamPolicy.
 */
export interface GetTagKeyIamPolicyArgs {
    /**
     * Used to find the parent resource to bind the IAM policy to
     */
    tagKey: string;
}
/**
 * A collection of values returned by getTagKeyIamPolicy.
 */
export interface GetTagKeyIamPolicyResult {
    /**
     * (Computed) The etag of the IAM policy.
     */
    readonly etag: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * (Required only by `gcp.tags.TagKeyIamPolicy`) The policy data generated by
     * a `gcp.organizations.getIAMPolicy` data source.
     */
    readonly policyData: string;
    readonly tagKey: string;
}
/**
 * Retrieves the current IAM policy data for tagkey
 *
 * ## example
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const policy = gcp.tags.getTagKeyIamPolicy({
 *     tagKey: key.name,
 * });
 * ```
 */
export declare function getTagKeyIamPolicyOutput(args: GetTagKeyIamPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTagKeyIamPolicyResult>;
/**
 * A collection of arguments for invoking getTagKeyIamPolicy.
 */
export interface GetTagKeyIamPolicyOutputArgs {
    /**
     * Used to find the parent resource to bind the IAM policy to
     */
    tagKey: pulumi.Input<string>;
}
