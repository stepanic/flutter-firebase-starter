"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ExternalAddress = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
/**
 * An allocated external IP address and its corresponding internal IP address in a private cloud.
 *
 * To get more information about ExternalAddress, see:
 *
 * * [API documentation](https://cloud.google.com/vmware-engine/docs/reference/rest/v1/projects.locations.privateClouds.externalAddresses)
 *
 * ## Example Usage
 *
 * ### Vmware Engine External Address Basic
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as gcp from "@pulumi/gcp";
 *
 * const external_address_nw = new gcp.vmwareengine.Network("external-address-nw", {
 *     name: "pc-nw",
 *     location: "global",
 *     type: "STANDARD",
 *     description: "PC network description.",
 * });
 * const external_address_pc = new gcp.vmwareengine.PrivateCloud("external-address-pc", {
 *     location: "-a",
 *     name: "sample-pc",
 *     description: "Sample test PC.",
 *     networkConfig: {
 *         managementCidr: "192.168.50.0/24",
 *         vmwareEngineNetwork: external_address_nw.id,
 *     },
 *     managementCluster: {
 *         clusterId: "sample-mgmt-cluster",
 *         nodeTypeConfigs: [{
 *             nodeTypeId: "standard-72",
 *             nodeCount: 3,
 *         }],
 *     },
 * });
 * const external_address_np = new gcp.vmwareengine.NetworkPolicy("external-address-np", {
 *     location: "",
 *     name: "sample-np",
 *     edgeServicesCidr: "192.168.30.0/26",
 *     vmwareEngineNetwork: external_address_nw.id,
 * });
 * const vmw_engine_external_address = new gcp.vmwareengine.ExternalAddress("vmw-engine-external-address", {
 *     name: "sample-external-address",
 *     parent: external_address_pc.id,
 *     internalIp: "192.168.0.66",
 *     description: "Sample description.",
 * }, {
 *     dependsOn: [external_address_np],
 * });
 * ```
 *
 * ## Import
 *
 * ExternalAddress can be imported using any of these accepted formats:
 *
 * * `{{parent}}/externalAddresses/{{name}}`
 *
 * When using the `pulumi import` command, ExternalAddress can be imported using one of the formats above. For example:
 *
 * ```sh
 * $ pulumi import gcp:vmwareengine/externalAddress:ExternalAddress default {{parent}}/externalAddresses/{{name}}
 * ```
 */
class ExternalAddress extends pulumi.CustomResource {
    /**
     * Get an existing ExternalAddress resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ExternalAddress(name, state, Object.assign(Object.assign({}, opts), { id: id }));
    }
    /**
     * Returns true if the given object is an instance of ExternalAddress.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ExternalAddress.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["externalIp"] = state ? state.externalIp : undefined;
            resourceInputs["internalIp"] = state ? state.internalIp : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["parent"] = state ? state.parent : undefined;
            resourceInputs["state"] = state ? state.state : undefined;
            resourceInputs["uid"] = state ? state.uid : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
        }
        else {
            const args = argsOrState;
            if ((!args || args.internalIp === undefined) && !opts.urn) {
                throw new Error("Missing required property 'internalIp'");
            }
            if ((!args || args.parent === undefined) && !opts.urn) {
                throw new Error("Missing required property 'parent'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["internalIp"] = args ? args.internalIp : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["parent"] = args ? args.parent : undefined;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["externalIp"] = undefined /*out*/;
            resourceInputs["state"] = undefined /*out*/;
            resourceInputs["uid"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ExternalAddress.__pulumiType, name, resourceInputs, opts);
    }
}
exports.ExternalAddress = ExternalAddress;
/** @internal */
ExternalAddress.__pulumiType = 'gcp:vmwareengine/externalAddress:ExternalAddress';
//# sourceMappingURL=externalAddress.js.map