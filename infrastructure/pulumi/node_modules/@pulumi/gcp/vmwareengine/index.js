"use strict";
// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.Subnet = exports.PrivateCloud = exports.NetworkPolicy = exports.NetworkPeering = exports.Network = exports.getVcenterCredentialsOutput = exports.getVcenterCredentials = exports.getSubnetOutput = exports.getSubnet = exports.getPrivateCloudOutput = exports.getPrivateCloud = exports.getNsxCredentialsOutput = exports.getNsxCredentials = exports.getNetworkPolicyOutput = exports.getNetworkPolicy = exports.getNetworkPeeringOutput = exports.getNetworkPeering = exports.getNetworkOutput = exports.getNetwork = exports.getExternalAddressOutput = exports.getExternalAddress = exports.getExternalAccessRuleOutput = exports.getExternalAccessRule = exports.getClusterOutput = exports.getCluster = exports.ExternalAddress = exports.ExternalAccessRule = exports.Cluster = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../utilities");
exports.Cluster = null;
utilities.lazyLoad(exports, ["Cluster"], () => require("./cluster"));
exports.ExternalAccessRule = null;
utilities.lazyLoad(exports, ["ExternalAccessRule"], () => require("./externalAccessRule"));
exports.ExternalAddress = null;
utilities.lazyLoad(exports, ["ExternalAddress"], () => require("./externalAddress"));
exports.getCluster = null;
exports.getClusterOutput = null;
utilities.lazyLoad(exports, ["getCluster", "getClusterOutput"], () => require("./getCluster"));
exports.getExternalAccessRule = null;
exports.getExternalAccessRuleOutput = null;
utilities.lazyLoad(exports, ["getExternalAccessRule", "getExternalAccessRuleOutput"], () => require("./getExternalAccessRule"));
exports.getExternalAddress = null;
exports.getExternalAddressOutput = null;
utilities.lazyLoad(exports, ["getExternalAddress", "getExternalAddressOutput"], () => require("./getExternalAddress"));
exports.getNetwork = null;
exports.getNetworkOutput = null;
utilities.lazyLoad(exports, ["getNetwork", "getNetworkOutput"], () => require("./getNetwork"));
exports.getNetworkPeering = null;
exports.getNetworkPeeringOutput = null;
utilities.lazyLoad(exports, ["getNetworkPeering", "getNetworkPeeringOutput"], () => require("./getNetworkPeering"));
exports.getNetworkPolicy = null;
exports.getNetworkPolicyOutput = null;
utilities.lazyLoad(exports, ["getNetworkPolicy", "getNetworkPolicyOutput"], () => require("./getNetworkPolicy"));
exports.getNsxCredentials = null;
exports.getNsxCredentialsOutput = null;
utilities.lazyLoad(exports, ["getNsxCredentials", "getNsxCredentialsOutput"], () => require("./getNsxCredentials"));
exports.getPrivateCloud = null;
exports.getPrivateCloudOutput = null;
utilities.lazyLoad(exports, ["getPrivateCloud", "getPrivateCloudOutput"], () => require("./getPrivateCloud"));
exports.getSubnet = null;
exports.getSubnetOutput = null;
utilities.lazyLoad(exports, ["getSubnet", "getSubnetOutput"], () => require("./getSubnet"));
exports.getVcenterCredentials = null;
exports.getVcenterCredentialsOutput = null;
utilities.lazyLoad(exports, ["getVcenterCredentials", "getVcenterCredentialsOutput"], () => require("./getVcenterCredentials"));
exports.Network = null;
utilities.lazyLoad(exports, ["Network"], () => require("./network"));
exports.NetworkPeering = null;
utilities.lazyLoad(exports, ["NetworkPeering"], () => require("./networkPeering"));
exports.NetworkPolicy = null;
utilities.lazyLoad(exports, ["NetworkPolicy"], () => require("./networkPolicy"));
exports.PrivateCloud = null;
utilities.lazyLoad(exports, ["PrivateCloud"], () => require("./privateCloud"));
exports.Subnet = null;
utilities.lazyLoad(exports, ["Subnet"], () => require("./subnet"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "gcp:vmwareengine/cluster:Cluster":
                return new exports.Cluster(name, undefined, { urn });
            case "gcp:vmwareengine/externalAccessRule:ExternalAccessRule":
                return new exports.ExternalAccessRule(name, undefined, { urn });
            case "gcp:vmwareengine/externalAddress:ExternalAddress":
                return new exports.ExternalAddress(name, undefined, { urn });
            case "gcp:vmwareengine/network:Network":
                return new exports.Network(name, undefined, { urn });
            case "gcp:vmwareengine/networkPeering:NetworkPeering":
                return new exports.NetworkPeering(name, undefined, { urn });
            case "gcp:vmwareengine/networkPolicy:NetworkPolicy":
                return new exports.NetworkPolicy(name, undefined, { urn });
            case "gcp:vmwareengine/privateCloud:PrivateCloud":
                return new exports.PrivateCloud(name, undefined, { urn });
            case "gcp:vmwareengine/subnet:Subnet":
                return new exports.Subnet(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("gcp", "vmwareengine/cluster", _module);
pulumi.runtime.registerResourceModule("gcp", "vmwareengine/externalAccessRule", _module);
pulumi.runtime.registerResourceModule("gcp", "vmwareengine/externalAddress", _module);
pulumi.runtime.registerResourceModule("gcp", "vmwareengine/network", _module);
pulumi.runtime.registerResourceModule("gcp", "vmwareengine/networkPeering", _module);
pulumi.runtime.registerResourceModule("gcp", "vmwareengine/networkPolicy", _module);
pulumi.runtime.registerResourceModule("gcp", "vmwareengine/privateCloud", _module);
pulumi.runtime.registerResourceModule("gcp", "vmwareengine/subnet", _module);
//# sourceMappingURL=index.js.map