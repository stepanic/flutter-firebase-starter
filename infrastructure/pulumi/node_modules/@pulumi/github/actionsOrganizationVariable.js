"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ActionsOrganizationVariable = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * This resource allows you to create and manage GitHub Actions variables within your GitHub organization.
 * You must have write access to a repository to use this resource.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as github from "@pulumi/github";
 *
 * const exampleVariable = new github.ActionsOrganizationVariable("example_variable", {
 *     variableName: "example_variable_name",
 *     visibility: "private",
 *     value: "example_variable_value",
 * });
 * ```
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as github from "@pulumi/github";
 *
 * const repo = github.getRepository({
 *     fullName: "my-org/repo",
 * });
 * const exampleVariable = new github.ActionsOrganizationVariable("example_variable", {
 *     variableName: "example_variable_name",
 *     visibility: "selected",
 *     value: "example_variable_value",
 *     selectedRepositoryIds: [repo.then(repo => repo.repoId)],
 * });
 * ```
 *
 * ## Import
 *
 * This resource can be imported using an ID made up of the variable name:
 *
 * ```sh
 * $ pulumi import github:index/actionsOrganizationVariable:ActionsOrganizationVariable test_variable test_variable_name
 * ```
 */
class ActionsOrganizationVariable extends pulumi.CustomResource {
    /**
     * Get an existing ActionsOrganizationVariable resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new ActionsOrganizationVariable(name, state, { ...opts, id: id });
    }
    /**
     * Returns true if the given object is an instance of ActionsOrganizationVariable.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ActionsOrganizationVariable.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["createdAt"] = state?.createdAt;
            resourceInputs["selectedRepositoryIds"] = state?.selectedRepositoryIds;
            resourceInputs["updatedAt"] = state?.updatedAt;
            resourceInputs["value"] = state?.value;
            resourceInputs["variableName"] = state?.variableName;
            resourceInputs["visibility"] = state?.visibility;
        }
        else {
            const args = argsOrState;
            if (args?.value === undefined && !opts.urn) {
                throw new Error("Missing required property 'value'");
            }
            if (args?.variableName === undefined && !opts.urn) {
                throw new Error("Missing required property 'variableName'");
            }
            if (args?.visibility === undefined && !opts.urn) {
                throw new Error("Missing required property 'visibility'");
            }
            resourceInputs["selectedRepositoryIds"] = args?.selectedRepositoryIds;
            resourceInputs["value"] = args?.value;
            resourceInputs["variableName"] = args?.variableName;
            resourceInputs["visibility"] = args?.visibility;
            resourceInputs["createdAt"] = undefined /*out*/;
            resourceInputs["updatedAt"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ActionsOrganizationVariable.__pulumiType, name, resourceInputs, opts);
    }
}
exports.ActionsOrganizationVariable = ActionsOrganizationVariable;
/** @internal */
ActionsOrganizationVariable.__pulumiType = 'github:index/actionsOrganizationVariable:ActionsOrganizationVariable';
//# sourceMappingURL=actionsOrganizationVariable.js.map