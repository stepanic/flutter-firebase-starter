"use strict";
// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.EnterpriseOrganization = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("./utilities");
/**
 * This resource allows you to create and manage a GitHub enterprise organization.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as github from "@pulumi/github";
 *
 * const org = new github.EnterpriseOrganization("org", {
 *     enterpriseId: enterprise.id,
 *     name: "some-awesome-org",
 *     displayName: "Some Awesome Org",
 *     description: "Organization created with terraform",
 *     billingEmail: "jon@winteriscoming.com",
 *     adminLogins: ["jon-snow"],
 * });
 * ```
 *
 * ## Import
 *
 * GitHub Enterprise Organization can be imported using the `slug` of the enterprise, combined with the `orgname` of the organization, separated by a `/` character.
 *
 * ```sh
 * $ pulumi import github:index/enterpriseOrganization:EnterpriseOrganization org enterp/some-awesome-org
 * ```
 */
class EnterpriseOrganization extends pulumi.CustomResource {
    /**
     * Get an existing EnterpriseOrganization resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    static get(name, id, state, opts) {
        return new EnterpriseOrganization(name, state, { ...opts, id: id });
    }
    /**
     * Returns true if the given object is an instance of EnterpriseOrganization.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    static isInstance(obj) {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EnterpriseOrganization.__pulumiType;
    }
    constructor(name, argsOrState, opts) {
        let resourceInputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState;
            resourceInputs["adminLogins"] = state?.adminLogins;
            resourceInputs["billingEmail"] = state?.billingEmail;
            resourceInputs["databaseId"] = state?.databaseId;
            resourceInputs["description"] = state?.description;
            resourceInputs["displayName"] = state?.displayName;
            resourceInputs["enterpriseId"] = state?.enterpriseId;
            resourceInputs["name"] = state?.name;
        }
        else {
            const args = argsOrState;
            if (args?.adminLogins === undefined && !opts.urn) {
                throw new Error("Missing required property 'adminLogins'");
            }
            if (args?.billingEmail === undefined && !opts.urn) {
                throw new Error("Missing required property 'billingEmail'");
            }
            if (args?.enterpriseId === undefined && !opts.urn) {
                throw new Error("Missing required property 'enterpriseId'");
            }
            resourceInputs["adminLogins"] = args?.adminLogins;
            resourceInputs["billingEmail"] = args?.billingEmail;
            resourceInputs["description"] = args?.description;
            resourceInputs["displayName"] = args?.displayName;
            resourceInputs["enterpriseId"] = args?.enterpriseId;
            resourceInputs["name"] = args?.name;
            resourceInputs["databaseId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EnterpriseOrganization.__pulumiType, name, resourceInputs, opts);
    }
}
exports.EnterpriseOrganization = EnterpriseOrganization;
/** @internal */
EnterpriseOrganization.__pulumiType = 'github:index/enterpriseOrganization:EnterpriseOrganization';
//# sourceMappingURL=enterpriseOrganization.js.map